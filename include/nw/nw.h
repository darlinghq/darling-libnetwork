/*
 This file is part of Darling.

 Copyright (C) 2019 Lubos Dolezel

 Darling is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Darling is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with Darling.  If not, see <http://www.gnu.org/licenses/>.
*/


#ifndef _network_H_
#define _network_H_

#import <Foundation/Foundation.h>

#import <nw/NWConcrete_nw_endpoint_mode_handler.h>
#import <nw/NWConcrete_nw_protocol_handle.h>
#import <nw/OS_nw_activity.h>
#import <nw/OS_nw_advertise_descriptor.h>
#import <nw/OS_nw_association.h>
#import <nw/OS_nw_authentication_challenge.h>
#import <nw/OS_nw_authentication_credential.h>
#import <nw/OS_nw_authentication_protection_space.h>
#import <nw/OS_nw_browse_descriptor.h>
#import <nw/OS_nw_browse_result.h>
#import <nw/OS_nw_browser.h>
#import <nw/OS_nw_connection.h>
#import <nw/OS_nw_content_context.h>
#import <nw/OS_nw_context.h>
#import <nw/OS_nw_data_transfer_report.h>
#import <nw/OS_nw_endpoint.h>
#import <nw/OS_nw_endpoint_fallback.h>
#import <nw/OS_nw_endpoint_flow.h>
#import <nw/OS_nw_endpoint_handler.h>
#import <nw/OS_nw_endpoint_proxy.h>
#import <nw/OS_nw_endpoint_resolver.h>
#import <nw/OS_nw_endpoint_transform.h>
#import <nw/OS_nw_error.h>
#import <nw/OS_nw_establishment_report.h>
#import <nw/OS_nw_ethernet_channel.h>
#import <nw/OS_nw_fd_wrapper.h>
#import <nw/OS_nw_framer.h>
#import <nw/OS_nw_interface.h>
#import <nw/OS_nw_interface_status_monitor.h>
#import <nw/OS_nw_interpose.h>
#import <nw/OS_nw_link_info.h>
#import <nw/OS_nw_listener.h>
#import <nw/OS_nw_nat64_prefixes_resolver.h>
#import <nw/OS_nw_pac_resolver.h>
#import <nw/OS_nw_parameters.h>
#import <nw/OS_nw_path.h>
#import <nw/OS_nw_path_evaluator.h>
#import <nw/OS_nw_path_flow.h>
#import <nw/OS_nw_path_flow_registration.h>
#import <nw/OS_nw_path_observer.h>
#import <nw/OS_nw_path_parameters.h>
#import <nw/OS_nw_protocol_data_array.h>
#import <nw/OS_nw_protocol_definition.h>
#import <nw/OS_nw_protocol_establishment_report.h>
#import <nw/OS_nw_protocol_instance.h>
#import <nw/OS_nw_protocol_instance_stub.h>
#import <nw/OS_nw_protocol_metadata.h>
#import <nw/OS_nw_protocol_options.h>
#import <nw/OS_nw_protocol_stack.h>
#import <nw/OS_nw_protocol_transform.h>
#import <nw/OS_nw_read_request.h>
#import <nw/OS_nw_resolver.h>
#import <nw/OS_nw_service_connector.h>
#import <nw/OS_nw_socks5_connection.h>
#import <nw/OS_nw_socks5_server.h>
#import <nw/OS_nw_txt_record.h>
#import <nw/OS_nw_unique_connection.h>
#import <nw/OS_nw_unique_connection_request.h>
#import <nw/OS_nw_write_request.h>
#import <nw/OS_nw_ws_ping_request.h>
#import <nw/OS_nw_ws_request.h>
#import <nw/OS_nw_ws_response.h>
#import <nw/OS_tcp_connection.h>
#import <nw/nw_listener_inbox_delegate.h>
#import <nw/NWConcrete_nw_socks5_connection.h>
#import <nw/NWConcrete_nw_endpoint_flow.h>
#import <nw/NWConcrete_nw_content_context.h>
#import <nw/NWConcrete_nw_browse_result.h>
#import <nw/NWConcrete_nw_endpoint_proxy.h>
#import <nw/OS_tcp_listener.h>
#import <nw/OS_network_proxy.h>
#import <nw/NWConcrete_nw_context.h>
#import <nw/NWConcrete_nw_ws_request.h>
#import <nw/NWConcrete_nw_activity.h>
#import <nw/NWConcrete_nw_authentication_protection_space.h>
#import <nw/NWConcrete_nw_authentication_challenge.h>
#import <nw/NWConcrete_nw_authentication_credential.h>
#import <nw/NWConcrete_nw_endpoint_handler.h>
#import <nw/NWConcrete_nw_browse_descriptor.h>
#import <nw/NWConcrete_nw_pac_resolver.h>
#import <nw/nw_listener_inbox_socket.h>
#import <nw/nw_listener_inbox_protocol.h>
#import <nw/nw_listener_inbox.h>
#import <nw/NWConcrete_nw_error.h>
#import <nw/NWConcrete_nw_endpoint_transform.h>
#import <nw/NWConcrete_nw_ws_ping_request.h>
#import <nw/NWConcrete_nw_resolver.h>
#import <nw/NWConcrete_nw_framer.h>
#import <nw/NWConcrete_nw_read_request.h>
#import <nw/NWConcrete_nw_unique_connection_request.h>
#import <nw/NWConcrete_nw_unique_connection.h>
#import <nw/NWConcrete_nw_service_connector.h>
#import <nw/NWConcrete_nw_interface.h>
#import <nw/NWConcrete_nw_association.h>
#import <nw/NWConcrete_nw_protocol_transform.h>
#import <nw/NWConcrete_nw_browser.h>
#import <nw/NWConcrete_nw_endpoint_fallback.h>
#import <nw/NWConcrete_nw_link_info.h>
#import <nw/NWConcrete_nw_ethernet_channel.h>
#import <nw/NWConcrete_nw_socks5_server.h>
#import <nw/NWConcrete_nw_protocol_instance_stub.h>
#import <nw/NWConcrete_nw_protocol_instance.h>
#import <nw/NWConcrete_nw_protocol_definition.h>
#import <nw/NWConcrete_nw_protocol_data_array.h>
#import <nw/NWConcrete_nw_protocol_metadata.h>
#import <nw/NWConcrete_nw_protocol_options.h>
#import <nw/NWConcrete_nw_ws_response.h>
#import <nw/NWConcrete_nw_protocol_stack.h>
#import <nw/NWConcrete_nw_path_parameters.h>
#import <nw/NWConcrete_nw_parameters.h>
#import <nw/NWConcrete_nw_endpoint_resolver.h>
#import <nw/NWConcrete_nw_connection.h>
#import <nw/NWConcrete_nw_write_request.h>
#import <nw/NWConcrete_nw_interface_status_monitor.h>
#import <nw/NWConcrete_nw_nat64_prefixes_resolver.h>
#import <nw/NWConcrete_tcp_connection.h>
#import <nw/NWConcrete_nw_fd_wrapper.h>
#import <nw/NWConcrete_nw_listener.h>
#import <nw/NWConcrete_nw_address_endpoint.h>
#import <nw/NWConcrete_nw_hostname_endpoint.h>
#import <nw/NWConcrete_nw_bonjour_service_endpoint.h>
#import <nw/NWConcrete_nw_srv_endpoint.h>
#import <nw/NW_URL_ENDPOINT_CLS.h>
#import <nw/NWConcrete_nw_custom_endpoint.h>
#import <nw/NWConcrete_nw_endpoint.h>
#import <nw/nw_interpose_flow.h>
#import <nw/nw_ip_channel_inbox.h>
#import <nw/NWConcrete_nw_txt_record.h>
#import <nw/NWConcrete_nw_path_observer.h>
#import <nw/NWConcrete_nw_path_evaluator.h>
#import <nw/NWConcrete_nw_path_flow.h>
#import <nw/NWConcrete_nw_path_flow_registration.h>
#import <nw/NWConcrete_nw_path.h>
#import <nw/NWConcrete_nw_interpose.h>
#import <nw/OS_nw_array.h>
#import <nw/OS_nw_parallel_array.h>
#import <nw/OS_nw_dictionary.h>
#import <nw/OS_nw_frame.h>
#import <nw/OS_nw_channel.h>
#import <nw/OS_nw_nexus.h>
#import <nw/OS_nw_protocol_socket.h>
#import <nw/NWConcrete_nw_protocol_establishment_report.h>
#import <nw/NWConcrete_nw_establishment_report.h>
#import <nw/NWConcrete_nw_data_transfer_report.h>
#import <nw/NWConcrete_nw_advertise_descriptor.h>

void* __nw_create_backtrace_string(void);
void* __nw_should_simulate_crash(void);
void* __nwlog_create_hash_from_private_string(void);
void* __nwlog_disable_simulate_crash_block(void);
void* __nwlog_dump_to_fd(void);
void* __nwlog_err_simulate_crash(void);
void* __nwlog_is_datapath_logging_enabled(void);
void* __nwlog_level_enabled(void);
void* __nwlog_obj(void);
void* __nwlog_override_fd(void);
void* __nwlog_override_simulate_crash_block(void);
void* __nwlog_pack(void);
void* __nwlog_register_helper(void);
void* __nwlog_run_with_lock(void);
void* __nwlog_salted_hash(void);
void* __nwlog_salted_hostname_hash(void);
void* __nwlog_snprintf_pack(void);
void* copyassocids(void);
void* copyconnids(void);
void* copyconninfo(void);
void* copymptcpinfo(void);
void* freeassocids(void);
void* freeconnids(void);
void* freeconninfo(void);
void* freemptcpinfo(void);
void* in6_pseudo(void);
void* in_addword(void);
void* in_adjust_cksum(void);
void* in_finalize_cksum(void);
void* in_pseudo(void);
void* inet_cksum(void);
void* netcore_append_format(void);
void* netcore_bool_to_string(void);
void* netcore_convert_to_timebase(void);
void* netcore_create_buffer_str_slow(void);
void* netcore_create_control_socket(void);
void* netcore_delta_ms(void);
void* netcore_delta_nanos(void);
void* netcore_dispatch_data_copyout(void);
void* netcore_dispatch_data_copyout_from_offset(void);
void* netcore_dispatch_data_to_iovec(void);
void* netcore_dispatch_data_to_iovec_partial(void);
void* netcore_get_future_continuous_time(void);
void* netcore_get_future_time_from(void);
void* netcore_is_cellular_fallback_enabled_in_metrics_testing(void);
void* netcore_is_ip_address(void);
void* netcore_mach_continuous_time(void);
void* netcore_queue(void);
void* netcore_stats_tcp_report_copy_description(void);
void* netcore_xpc_array_get_value_of_type(void);
void* netcore_xpc_dictionary_get_value_of_type(void);
void* network_config_cellular_blocked_observer_cancel(void);
void* network_config_cellular_blocked_observer_create(void);
void* network_config_cellular_failed_observer_create(void);
void* network_config_check_interface_settings(void);
void* network_config_copy_setting(void);
void* network_config_get_bool_setting(void);
void* network_config_get_bool_setting_with_default(void);
void* network_config_get_default_multipath_service_type(void);
void* network_config_get_int64_setting(void);
void* network_config_get_int64_setting_with_default(void);
void* network_config_get_multipath_allow_aggregation(void);
void* network_config_has_cellular_fallback_enabled_in_metrics_testing(void);
void* network_config_mptcp_cell_in_use(void);
void* network_config_mptcp_watcher_create(void);
void* network_config_mptcp_watcher_destroy(void);
void* network_config_open_kernel_network_advisory_socket(void);
void* network_config_register_boringssl_log_debug_updates(void);
void* network_config_register_quic_log_debug_updates(void);
void* network_config_set_bool_setting(void);
void* network_config_set_bool_sysctl_setting(void);
void* network_config_set_default_multipath_service_type(void);
void* network_config_set_int64_setting(void);
void* network_config_set_int_sysctl_setting(void);
void* network_config_set_interface_constrained(void);
void* network_config_set_interface_expensive(void);
void* network_config_set_multipath_allow_aggregation(void);
void* network_config_set_opportunistic_blocked(void);
void* network_config_set_persistent_interface(void);
void* network_config_set_setting(void);
void* network_config_wifi_blocked_observer_create(void);
void* network_proxy_copy_host(void);
void* network_proxy_copy_password(void);
void* network_proxy_copy_user(void);
void* network_proxy_create_from_parameters(void);
void* network_proxy_get_port(void);
void* network_proxy_get_type(void);
void* network_proxy_is_transparent(void);
void* network_release(void);
void* network_retain(void);
void* networkd_privileged_reload_managed_network_settings(void);
void* networkd_privileged_set_agent_on_interface_internal(void);
void* networkd_privileged_set_constrained(void);
void* networkd_privileged_set_expensive(void);
void* networkd_privileged_setup_feth_pair(void);
void* networkd_privileged_teardown_feth_pair(void);
void* networkd_privileged_type_to_string(void);
void* networkd_settings_copy_value_of_type(void);
void* networkd_settings_get_bool(void);
void* networkd_settings_get_int64(void);
void* networkd_settings_get_int64_with_default(void);
void* nw_SSLAllocBuffer(void);
void* nw_SSLCopyBuffer(void);
void* nw_SSLCopyBufferFromData(void);
void* nw_SSLFreeBuffer(void);
void* nw_activity_activate(void);
void* nw_activity_child_has_forked(void);
void* nw_activity_complete_with_reason(void);
void* nw_activity_copy_log_object(void);
void* nw_activity_copy_parent_activity(void);
void* nw_activity_copy_redacted_description(void);
void* nw_activity_copy_xpc_token(void);
void* nw_activity_create(void);
void* nw_activity_create_from_token(void);
void* nw_activity_create_from_xpc_token(void);
void* nw_activity_create_retry(void);
void* nw_activity_deep_is_equal(void);
void* nw_activity_domain_and_label_to_string(void);
void* nw_activity_domain_is_valid(void);
void* nw_activity_domain_to_string(void);
void* nw_activity_duration_exceeds_threshold(void);
void* nw_activity_duration_threshold_for_label(void);
void* nw_activity_get_activation_time(void);
void* nw_activity_get_completion_reason(void);
void* nw_activity_get_domain(void);
void* nw_activity_get_duration(void);
void* nw_activity_get_investigation_identifier(void);
void* nw_activity_get_is_retry(void);
void* nw_activity_get_label(void);
void* nw_activity_get_reporting_strategy(void);
void* nw_activity_get_token(void);
void* nw_activity_has_global_investigation_identifier(void);
void* nw_activity_has_investigation_identifier(void);
void* nw_activity_is_activated(void);
void* nw_activity_is_complete(void);
void* nw_activity_is_equal(void);
void* nw_activity_is_lightweight_representation(void);
void* nw_activity_is_selected_for_reporting(void);
void* nw_activity_label_is_valid(void);
void* nw_activity_label_to_string(void);
void* nw_activity_set_investigation_identifier(void);
void* nw_activity_set_parent_activity(void);
void* nw_activity_set_reporting_strategy(void);
void* nw_activity_should_report_to_destination(void);
void* nw_activity_uuid_is_selected_for_reporting(void);
void* nw_advertise_descriptor_copy_txt_record_object(void);
void* nw_advertise_descriptor_create_bonjour_service(void);
void* nw_advertise_descriptor_get_bonjour_domain(void);
void* nw_advertise_descriptor_get_bonjour_name(void);
void* nw_advertise_descriptor_get_bonjour_type(void);
void* nw_advertise_descriptor_get_no_auto_rename(void);
void* nw_advertise_descriptor_get_txt_record(void);
void* nw_advertise_descriptor_set_no_auto_rename(void);
void* nw_advertise_descriptor_set_txt_record(void);
void* nw_advertise_descriptor_set_txt_record_object(void);
void* nw_allow_use_of_dispatch(void);
void* nw_allow_use_of_dispatch_internal(void);
void* nw_array_append(void);
void* nw_array_apply(void);
void* nw_array_contains_object(void);
void* nw_array_copy(void);
void* nw_array_create(void);
void* nw_array_create_by_removal(void);
void* nw_array_create_combined_array(void);
void* nw_array_duplicate_array_without_object(void);
void* nw_array_get_count(void);
void* nw_array_get_object_at_index(void);
void* nw_array_is_equal(void);
void* nw_association_clear_cached_content_for_protocol(void);
void* nw_association_copy_current_path(void);
void* nw_association_copy_endpoint(void);
void* nw_association_create(void);
void* nw_association_create_flow(void);
void* nw_association_force_update(void);
void* nw_association_get_cached_content_for_protocol(void);
void* nw_association_get_connected_flow_count(void);
void* nw_association_is_empty(void);
void* nw_association_mark_flow_connected(void);
void* nw_association_mark_flow_disconnected(void);
void* nw_association_register(void);
void* nw_association_set_cached_content_for_protocol(void);
void* nw_association_unregister(void);
void* nw_authentication_challenge_copy_http_message(void);
void* nw_authentication_challenge_copy_protection_space(void);
void* nw_authentication_challenge_create(void);
void* nw_authentication_challenge_get_attempt_count(void);
void* nw_authentication_challenge_get_type(void);
void* nw_authentication_challenge_set_attempt_count(void);
void* nw_authentication_challenge_set_protection_space(void);
void* nw_authentication_credential_add_valid_authentication_type(void);
void* nw_authentication_credential_create(void);
void* nw_authentication_credential_iterate_valid_authentication_types(void);
void* nw_authentication_credential_set_identity(void);
void* nw_authentication_credential_set_password(void);
void* nw_authentication_credential_set_username(void);
void* nw_authentication_protection_space_copy_endpoint(void);
void* nw_authentication_protection_space_create(void);
void* nw_authentication_protection_space_get_is_proxy(void);
void* nw_authentication_protection_space_set_endpoint(void);
void* nw_authentication_protection_space_set_is_proxy(void);
void* nw_browse_descriptor_copy_custom_browse_block(void);
void* nw_browse_descriptor_copy_custom_data(void);
void* nw_browse_descriptor_create_bonjour_service(void);
void* nw_browse_descriptor_create_custom(void);
void* nw_browse_descriptor_get_bonjour_service_domain(void);
void* nw_browse_descriptor_get_bonjour_service_type(void);
void* nw_browse_descriptor_get_description(void);
void* nw_browse_descriptor_get_include_txt_record(void);
void* nw_browse_descriptor_get_type(void);
void* nw_browse_descriptor_is_custom_type(void);
void* nw_browse_descriptor_set_include_txt_record(void);
void* nw_browse_result_copy_endpoint(void);
void* nw_browse_result_copy_txt_record_object(void);
void* nw_browse_result_create(void);
void* nw_browse_result_create_mutable_copy(void);
void* nw_browse_result_enumerate_interfaces(void);
void* nw_browse_result_get_change_description(void);
void* nw_browse_result_get_changes(void);
void* nw_browse_result_get_description(void);
void* nw_browse_result_get_interfaces_count(void);
void* nw_browse_result_insert_interface(void);
void* nw_browse_result_mark_immutable(void);
void* nw_browse_result_remove_interface(void);
void* nw_browse_result_set_txt_record_object(void);
void* nw_browser_cancel(void);
void* nw_browser_copy_browse_descriptor(void);
void* nw_browser_copy_browse_results(void);
void* nw_browser_copy_parameters(void);
void* nw_browser_create(void);
void* nw_browser_get_description(void);
void* nw_browser_set_browse_results_changed_handler(void);
void* nw_browser_set_queue(void);
void* nw_browser_set_state_changed_handler(void);
void* nw_browser_start(void);
void* nw_channel_close(void);
void* nw_channel_create_with_attributes(void);
void* nw_channel_create_with_nexus(void);
void* nw_channel_get_advisory_region(void);
void* nw_channel_get_key(void);
void* nw_channel_get_nexus_instance(void);
void* nw_channel_get_protocol_handler(void);
void* nw_channel_get_stats_region(void);
void* nw_channel_has_partial_checksum_offload(void);
void* nw_channel_set_close_automatically(void);
void* nw_channel_set_defer_input_available(void);
void* nw_channel_set_protocol_level(void);
void* nw_connection_access_establishment_report(void);
void* nw_connection_access_probe_connections(void);
void* nw_connection_add_client_event(void);
void* nw_connection_add_probe(void);
void* nw_connection_append_and_start_application_protocol(void);
void* nw_connection_batch(void);
void* nw_connection_better_path_available(void);
void* nw_connection_cancel(void);
void* nw_connection_cancel_current_endpoint(void);
void* nw_connection_check_experimental_probe_options(void);
void* nw_connection_copy_attempted_endpoint_array(void);
void* nw_connection_copy_connected_local_endpoint(void);
void* nw_connection_copy_connected_path(void);
void* nw_connection_copy_connected_remote_endpoint(void);
void* nw_connection_copy_current_path(void);
void* nw_connection_copy_description(void);
void* nw_connection_copy_endpoint(void);
void* nw_connection_copy_establishment_report_on_queue(void);
void* nw_connection_copy_host_endpoint(void);
void* nw_connection_copy_metadata(void);
void* nw_connection_copy_parameters(void);
void* nw_connection_copy_protocol_metadata(void);
void* nw_connection_copy_protocol_metadata_on_queue(void);
void* nw_connection_copy_tcp_info(void);
void* nw_connection_create(void);
void* nw_connection_create_experimental_probe(void);
void* nw_connection_create_experimental_probe_configuration_block_for_protocol(void);
void* nw_connection_create_interface_status_monitor(void);
void* nw_connection_create_new_data_transfer_report(void);
void* nw_connection_create_with_client_id(void);
void* nw_connection_create_with_connected_socket(void);
void* nw_connection_create_with_connected_socket_and_parameters(void);
void* nw_connection_create_with_connection(void);
void* nw_connection_dump_timestamps(void);
void* nw_connection_end_activity(void);
void* nw_connection_fillout_tcp_connection_info(void);
void* nw_connection_fillout_tcp_statistics(void);
void* nw_connection_force_cancel(void);
void* nw_connection_get_connected_socket(void);
void* nw_connection_get_id(void);
void* nw_connection_get_maximum_datagram_size(void);
void* nw_connection_get_unsent_byte_count(void);
void* nw_connection_get_uuid(void);
void* nw_connection_has_proxy_attempt(void);
void* nw_connection_inject_up(void);
void* nw_connection_modify_connected_protocol_stack(void);
void* nw_connection_multipath_copy_subflow_counts(void);
void* nw_connection_multipath_get_primary_subflow_interface_index(void);
void* nw_connection_multipath_get_subflow_count(void);
void* nw_connection_read(void);
void* nw_connection_read_buffer(void);
void* nw_connection_read_multiple(void);
void* nw_connection_receive(void);
void* nw_connection_receive_message(void);
void* nw_connection_receive_message_with_context(void);
void* nw_connection_receive_with_context(void);
void* nw_connection_remove_probe(void);
void* nw_connection_reset_expected_progress_target(void);
void* nw_connection_reset_traffic_class(void);
void* nw_connection_restart(void);
void* nw_connection_send(void);
void* nw_connection_send_reply(void);
void* nw_connection_set_adaptive_read_handler(void);
void* nw_connection_set_adaptive_write_handler(void);
void* nw_connection_set_alternate_path_state_handler(void);
void* nw_connection_set_better_path_available_handler(void);
void* nw_connection_set_cancel_handler(void);
void* nw_connection_set_event_handler(void);
void* nw_connection_set_excessive_keepalive_handler(void);
void* nw_connection_set_low_throughput_handler(void);
void* nw_connection_set_metadata_changed_handler(void);
void* nw_connection_set_path_changed_handler(void);
void* nw_connection_set_queue(void);
void* nw_connection_set_read_close_handler(void);
void* nw_connection_set_state_changed_handler(void);
void* nw_connection_set_tls_message_handler(void);
void* nw_connection_set_tls_prepare_handler(void);
void* nw_connection_set_viability_changed_handler(void);
void* nw_connection_set_write_close_handler(void);
void* nw_connection_should_run_experimental_probe(void);
void* nw_connection_start(void);
void* nw_connection_start_activity(void);
void* nw_connection_state_to_string(void);
void* nw_connection_tls_apply(void);
void* nw_connection_used_fallback(void);
void* nw_connection_used_tfo(void);
void* nw_connection_used_tls(void);
void* nw_connection_uses_multipath(void);
void* nw_connection_uses_sleep_proxy(void);
void* nw_connection_write(void);
void* nw_connection_write_close(void);
void* nw_connection_write_multiple(void);
void* nw_content_context_copy_antecedent(void);
void* nw_content_context_copy_protocol_metadata(void);
void* nw_content_context_create(void);
void* nw_content_context_foreach_protocol_metadata(void);
void* nw_content_context_get_expiration_milliseconds(void);
void* nw_content_context_get_identifier(void);
void* nw_content_context_get_is_final(void);
void* nw_content_context_get_relative_priority(void);
void* nw_content_context_set_antecedent(void);
void* nw_content_context_set_expiration_milliseconds(void);
void* nw_content_context_set_is_final(void);
void* nw_content_context_set_metadata_for_protocol(void);
void* nw_content_context_set_packet_id(void);
void* nw_content_context_set_relative_priority(void);
void* nw_context_128k_buffer_length(void);
void* nw_context_128k_buffer_manager(void);
void* nw_context_16k_buffer_length(void);
void* nw_context_16k_buffer_manager(void);
void* nw_context_2k_buffer_length(void);
void* nw_context_2k_buffer_manager(void);
void* nw_context_64k_buffer_length(void);
void* nw_context_64k_buffer_manager(void);
void* nw_context_8k_buffer_length(void);
void* nw_context_8k_buffer_manager(void);
void* nw_context_activate(void);
void* nw_context_caches_are_shared(void);
void* nw_context_copy_implicit_context(void);
void* nw_context_create(void);
void* nw_context_get_globals_for_protocol(void);
void* nw_context_get_identifier(void);
void* nw_context_get_isolate_protocol_cache(void);
void* nw_context_get_isolate_protocol_stack(void);
void* nw_context_get_privacy_level(void);
void* nw_context_get_private_redacted(void);
void* nw_context_get_scheduling_mode(void);
void* nw_context_purge_all_endpoints(void);
void* nw_context_reset_timer_block(void);
void* nw_context_set_isolate_protocol_cache(void);
void* nw_context_set_isolate_protocol_stack(void);
void* nw_context_set_privacy_level(void);
void* nw_context_set_protocol_cache_limits(void);
void* nw_context_set_scheduling_mode(void);
void* nw_data_mode_to_string(void);
void* nw_data_transfer_report_collect(void);
void* nw_data_transfer_report_copy_dictionary(void);
void* nw_data_transfer_report_copy_path_interface(void);
void* nw_data_transfer_report_create_from_dictionary(void);
void* nw_data_transfer_report_get_duration_milliseconds(void);
void* nw_data_transfer_report_get_path_count(void);
void* nw_data_transfer_report_get_received_application_byte_count(void);
void* nw_data_transfer_report_get_received_ip_packet_count(void);
void* nw_data_transfer_report_get_received_transport_byte_count(void);
void* nw_data_transfer_report_get_received_transport_duplicate_byte_count(void);
void* nw_data_transfer_report_get_received_transport_out_of_order_byte_count(void);
void* nw_data_transfer_report_get_sent_application_byte_count(void);
void* nw_data_transfer_report_get_sent_ip_packet_count(void);
void* nw_data_transfer_report_get_sent_transport_byte_count(void);
void* nw_data_transfer_report_get_sent_transport_retransmitted_byte_count(void);
void* nw_data_transfer_report_get_state(void);
void* nw_data_transfer_report_get_transport_minimum_rtt_milliseconds(void);
void* nw_data_transfer_report_get_transport_rtt_variance(void);
void* nw_data_transfer_report_get_transport_smoothed_rtt_milliseconds(void);
void* nw_dictionary_apply(void);
void* nw_dictionary_copy(void);
void* nw_dictionary_copy_value(void);
void* nw_dictionary_create(void);
void* nw_dictionary_get_count(void);
void* nw_dictionary_set_value(void);
void* nw_dispatch_data_is_equal(void);
void* nw_endpoint_address_endpoint_matches_address(void);
void* nw_endpoint_copy_address_string(void);
void* nw_endpoint_copy_association(void);
void* nw_endpoint_copy_custom_data(void);
void* nw_endpoint_copy_custom_resolver_block(void);
void* nw_endpoint_copy_dictionary(void);
void* nw_endpoint_copy_host_port_endpoint_for_url(void);
void* nw_endpoint_copy_interface(void);
void* nw_endpoint_copy_original_endpoint(void);
void* nw_endpoint_copy_parent_endpoint(void);
void* nw_endpoint_copy_port_string(void);
void* nw_endpoint_copy_proxy_original_endpoint(void);
void* nw_endpoint_copy_txt_record_object(void);
void* nw_endpoint_create_address(void);
void* nw_endpoint_create_address_with_ethernet(void);
void* nw_endpoint_create_address_with_port(void);
void* nw_endpoint_create_bonjour_service(void);
void* nw_endpoint_create_custom(void);
void* nw_endpoint_create_from_dictionary(void);
void* nw_endpoint_create_host(void);
void* nw_endpoint_create_host_with_numeric_port(void);
void* nw_endpoint_create_srv(void);
void* nw_endpoint_create_unix(void);
void* nw_endpoint_create_url(void);
void* nw_endpoint_create_with_peer_name(void);
void* nw_endpoint_create_with_sock_name(void);
void* nw_endpoint_get_address(void);
void* nw_endpoint_get_address_family(void);
void* nw_endpoint_get_alternate_port(void);
void* nw_endpoint_get_bonjour_fullname(void);
void* nw_endpoint_get_bonjour_service_domain(void);
void* nw_endpoint_get_bonjour_service_name(void);
void* nw_endpoint_get_bonjour_service_type(void);
void* nw_endpoint_get_custom_data_length(void);
void* nw_endpoint_get_description(void);
void* nw_endpoint_get_domain_for_policy(void);
void* nw_endpoint_get_ethernet_address(void);
void* nw_endpoint_get_hash(void);
void* nw_endpoint_get_hostname(void);
void* nw_endpoint_get_logging_description(void);
void* nw_endpoint_get_parent_endpoint_domain(void);
void* nw_endpoint_get_port(void);
void* nw_endpoint_get_priority(void);
void* nw_endpoint_get_sanitized_url(void);
void* nw_endpoint_get_srv_name(void);
void* nw_endpoint_get_type(void);
void* nw_endpoint_get_url(void);
void* nw_endpoint_get_url_hash(void);
void* nw_endpoint_get_url_path(void);
void* nw_endpoint_get_url_scheme(void);
void* nw_endpoint_get_weight(void);
void* nw_endpoint_is_broadcast(void);
void* nw_endpoint_is_custom_type(void);
void* nw_endpoint_is_equal(void);
void* nw_endpoint_proxy_copy_synthesized_url(void);
void* nw_endpoint_proxy_match_exception_to_endpoint(void);
void* nw_endpoint_set_alternate_port(void);
void* nw_endpoint_set_interface(void);
void* nw_endpoint_set_priority(void);
void* nw_endpoint_set_txt_record_object(void);
void* nw_endpoint_set_weight(void);
void* nw_error_copy_cf_error(void);
void* nw_error_create_dns_error(void);
void* nw_error_create_error_with_inferred_domain(void);
void* nw_error_create_posix_error(void);
void* nw_error_create_tls_error(void);
void* nw_error_get_error_code(void);
void* nw_error_get_error_domain(void);
void* nw_error_is_equal(void);
void* nw_establishment_report_copy_dictionary(void);
void* nw_establishment_report_copy_proxy_endpoint(void);
void* nw_establishment_report_create_from_dictionary(void);
void* nw_establishment_report_enumerate_protocols(void);
void* nw_establishment_report_enumerate_resolutions(void);
void* nw_establishment_report_get_attempt_started_after_milliseconds(void);
void* nw_establishment_report_get_duration_milliseconds(void);
void* nw_establishment_report_get_flow_started_after_milliseconds(void);
void* nw_establishment_report_get_previous_attempt_count(void);
void* nw_establishment_report_get_proxy_configured(void);
void* nw_establishment_report_get_resolution_started_after_milliseconds(void);
void* nw_establishment_report_get_used_proxy(void);
void* nw_ethernet_channel_cancel(void);
void* nw_ethernet_channel_create(void);
void* nw_ethernet_channel_send(void);
void* nw_ethernet_channel_set_queue(void);
void* nw_ethernet_channel_set_receive_handler(void);
void* nw_ethernet_channel_set_state_changed_handler(void);
void* nw_ethernet_channel_start(void);
void* nw_fd_wrapper_close(void);
void* nw_fd_wrapper_create(void);
void* nw_fd_wrapper_get_fd(void);
void* nw_fd_wrapper_guard(void);
void* nw_fd_wrapper_is_guarded(void);
void* nw_frame_array_append(void);
void* nw_frame_array_append_array(void);
void* nw_frame_array_check_length(void);
void* nw_frame_array_first(void);
void* nw_frame_array_foreach(void);
void* nw_frame_array_init(void);
void* nw_frame_array_insert_after(void);
void* nw_frame_array_is_empty(void);
void* nw_frame_array_last(void);
void* nw_frame_array_next(void);
void* nw_frame_array_prepend(void);
void* nw_frame_array_prepend_array(void);
void* nw_frame_array_remove(void);
void* nw_frame_array_unclaimed_length(void);
void* nw_frame_buffer_get_manager(void);
void* nw_frame_buffer_used_malloc(void);
void* nw_frame_buffer_used_manager(void);
void* nw_frame_check_validity(void);
void* nw_frame_claim(void);
void* nw_frame_collapse(void);
void* nw_frame_copy_external_data(void);
void* nw_frame_copy_metadata_for_protocol(void);
void* nw_frame_copy_metadata_uuid(void);
void* nw_frame_copy_unclaimed_data(void);
void* nw_frame_create(void);
void* nw_frame_create_external(void);
void* nw_frame_effective_length(void);
void* nw_frame_finalize(void);
void* nw_frame_foreach_protocol_metadata(void);
void* nw_frame_free_buffer(void);
void* nw_frame_get_buffer(void);
void* nw_frame_get_buffer_manager_with_context(void);
void* nw_frame_get_external_data(void);
void* nw_frame_get_finalizer_context(void);
void* nw_frame_get_flow_handler(void);
void* nw_frame_get_flow_id(void);
void* nw_frame_get_internet_checksum(void);
void* nw_frame_get_internet_checksum_handler(void);
void* nw_frame_get_manager_for_size(void);
void* nw_frame_get_metadata(void);
void* nw_frame_inherit_metadata(void);
void* nw_frame_is_connection_complete(void);
void* nw_frame_is_in_array(void);
void* nw_frame_is_metadata_complete(void);
void* nw_frame_reclassify(void);
void* nw_frame_reset(void);
void* nw_frame_set_buffer_used_malloc(void);
void* nw_frame_set_buffer_used_manager(void);
void* nw_frame_set_check_validity_handler(void);
void* nw_frame_set_connection_complete(void);
void* nw_frame_set_expire_time(void);
void* nw_frame_set_external_data(void);
void* nw_frame_set_flow_handler(void);
void* nw_frame_set_flow_id(void);
void* nw_frame_set_internet_checksum(void);
void* nw_frame_set_internet_checksum_handler(void);
void* nw_frame_set_metadata(void);
void* nw_frame_set_packet_id(void);
void* nw_frame_set_reclassifier(void);
void* nw_frame_unclaim(void);
void* nw_frame_unclaimed_bytes(void);
void* nw_frame_unclaimed_length(void);
void* nw_frame_uses_external_data(void);
void* nw_frame_will_free_buffer_externally(void);
void* nw_framer_async(void);
void* nw_framer_copy_local_endpoint(void);
void* nw_framer_copy_options(void);
void* nw_framer_copy_parameters(void);
void* nw_framer_copy_remote_endpoint(void);
void* nw_framer_create_definition(void);
void* nw_framer_create_options(void);
void* nw_framer_deliver_input(void);
void* nw_framer_deliver_input_no_copy(void);
void* nw_framer_mark_failed_with_error(void);
void* nw_framer_mark_ready(void);
void* nw_framer_message_access_value(void);
void* nw_framer_message_copy_object_value(void);
void* nw_framer_message_copy_original_message(void);
void* nw_framer_message_create(void);
void* nw_framer_message_create_reply(void);
void* nw_framer_message_set_object_value(void);
void* nw_framer_message_set_value(void);
void* nw_framer_parse_input(void);
void* nw_framer_parse_output(void);
void* nw_framer_pass_through_input(void);
void* nw_framer_pass_through_output(void);
void* nw_framer_prepend_application_protocol(void);
void* nw_framer_protocol_create_message(void);
void* nw_framer_schedule_wakeup(void);
void* nw_framer_set_cleanup_handler(void);
void* nw_framer_set_input_handler(void);
void* nw_framer_set_output_handler(void);
void* nw_framer_set_stop_handler(void);
void* nw_framer_set_wakeup_handler(void);
void* nw_framer_write_output(void);
void* nw_framer_write_output_data(void);
void* nw_framer_write_output_no_copy(void);
void* nw_hash_node_get_extra(void);
void* nw_hash_node_get_object(void);
void* nw_hash_table_add_object(void);
void* nw_hash_table_apply(void);
void* nw_hash_table_count(void);
void* nw_hash_table_create(void);
void* nw_hash_table_get_node(void);
void* nw_hash_table_get_some_node(void);
void* nw_hash_table_release(void);
void* nw_hash_table_release_all_objects(void);
void* nw_hash_table_remove_node(void);
void* nw_interface_copy_delegate_interface(void);
void* nw_interface_copy_dictionary(void);
void* nw_interface_copy_ipv4_broadcast_endpoint(void);
void* nw_interface_copy_ipv4_netmask_endpoint(void);
void* nw_interface_create_from_dictionary(void);
void* nw_interface_create_from_necp(void);
void* nw_interface_create_static(void);
void* nw_interface_create_with_index(void);
void* nw_interface_create_with_index_and_name(void);
void* nw_interface_create_with_name(void);
void* nw_interface_deep_compare(void);
void* nw_interface_functional_type_to_interface_subtype(void);
void* nw_interface_functional_type_to_interface_type(void);
void* nw_interface_get_active_state(void);
void* nw_interface_get_generation(void);
void* nw_interface_get_index(void);
void* nw_interface_get_ipv4_broadcast(void);
void* nw_interface_get_ipv4_netmask(void);
void* nw_interface_get_ipv4_network_signature(void);
void* nw_interface_get_ipv6_network_signature(void);
void* nw_interface_get_mtu(void);
void* nw_interface_get_name(void);
void* nw_interface_get_shallow_hash(void);
void* nw_interface_get_subtype(void);
void* nw_interface_get_type(void);
void* nw_interface_is_constrained(void);
void* nw_interface_is_expensive(void);
void* nw_interface_is_multilayer_packet_logging_enabled(void);
void* nw_interface_query_lqm(void);
void* nw_interface_set_active(void);
void* nw_interface_shallow_compare(void);
void* nw_interface_status_monitor_cancel(void);
void* nw_interface_status_monitor_copy_interface(void);
void* nw_interface_status_monitor_set_packet_event_handler(void);
void* nw_interface_status_monitor_set_update_handler(void);
void* nw_interface_subtype_get_description(void);
void* nw_interface_supports_ack_priority(void);
void* nw_interface_supports_carrier_aggregation(void);
void* nw_interface_supports_tx_start(void);
void* nw_interface_type_get_description(void);
void* nw_interface_type_to_functional_type(void);
void* nw_interpose_cancel(void);
void* nw_interpose_client_claim(void);
void* nw_interpose_client_register(void);
void* nw_interpose_get_client_uuid(void);
void* nw_interpose_set_flow_event_handler(void);
void* nw_interpose_set_queue(void);
void* nw_interpose_start(void);
void* nw_ip_create_metadata(void);
void* nw_ip_create_options(void);
void* nw_ip_metadata_get_ecn_flag(void);
void* nw_ip_metadata_get_receive_time(void);
void* nw_ip_metadata_get_service_class(void);
void* nw_ip_metadata_set_ecn_flag(void);
void* nw_ip_metadata_set_service_class(void);
void* nw_ip_options_set_calculate_receive_time(void);
void* nw_ip_options_set_disable_fragmentation(void);
void* nw_ip_options_set_hop_limit(void);
void* nw_ip_options_set_local_address_preference(void);
void* nw_ip_options_set_use_minimum_mtu(void);
void* nw_ip_options_set_version(void);
void* nw_is_dispatch_allowed(void);
void* nw_link_get_flow_control_status(void);
void* nw_link_info_create(void);
void* nw_link_set_flow_control_status(void);
void* nw_listener_cancel(void);
void* nw_listener_copy_advertise_descriptor(void);
void* nw_listener_copy_local_endpoint(void);
void* nw_listener_create(void);
void* nw_listener_create_with_connection(void);
void* nw_listener_create_with_launchd_key(void);
void* nw_listener_create_with_port(void);
void* nw_listener_get_new_connection_limit(void);
void* nw_listener_get_port(void);
void* nw_listener_set_advertise_descriptor(void);
void* nw_listener_set_advertised_endpoint_changed_handler(void);
void* nw_listener_set_event_handler(void);
void* nw_listener_set_new_connection_handler(void);
void* nw_listener_set_new_connection_limit(void);
void* nw_listener_set_queue(void);
void* nw_listener_set_state_changed_handler(void);
void* nw_listener_start(void);
void* nw_log_delta_to_ms(void);
void* nw_log_ms_to_delta(void);
void* nw_log_ring_append(void);
void* nw_log_ring_copyout(void);
void* nw_log_ring_parse(void);
void* nw_log_ring_parse_count(void);
void* nw_mem_buffer_allocate(void);
void* nw_mem_buffer_free(void);
void* nw_mpkl_child_has_forked(void);
void* nw_mpkl_copy_log_object(void);
void* nw_nat64_can_v4_address_be_synthesized(void);
void* nw_nat64_copy_prefixes(void);
void* nw_nat64_copy_prefixes_async(void);
void* nw_nat64_copy_prefixes_from_ipv4only_records(void);
void* nw_nat64_does_interface_index_support_nat64(void);
void* nw_nat64_extract_v4(void);
void* nw_nat64_prefixes_resolver_cancel(void);
void* nw_nat64_prefixes_resolver_copy_interface(void);
void* nw_nat64_prefixes_resolver_create(void);
void* nw_nat64_prefixes_resolver_set_cancel_handler(void);
void* nw_nat64_prefixes_resolver_set_queue(void);
void* nw_nat64_prefixes_resolver_set_update_handler(void);
void* nw_nat64_prefixes_resolver_start(void);
void* nw_nat64_synthesize(void);
void* nw_nat64_synthesize_v6(void);
void* nw_nat64_v4_address_requires_synthesis(void);
void* nw_nat64_write_prefix_to_string(void);
void* nw_network_agent_add_persistent_agent_to_interface(void);
void* nw_network_agent_add_to_interface(void);
void* nw_network_agent_copy_dictionary_for_uuid(void);
void* nw_network_agent_copy_uuid(void);
void* nw_network_agent_create_agent_from_data(void);
void* nw_network_agent_ctl_copy_received_agent_message(void);
void* nw_network_agent_ctl_send_assign_message(void);
void* nw_network_agent_ctl_setsockopt(void);
void* nw_network_agent_get_agent_classs(void);
void* nw_network_agent_get_agent_from_dictionary(void);
void* nw_network_agent_get_data(void);
void* nw_network_agent_get_description(void);
void* nw_network_agent_get_domain(void);
void* nw_network_agent_get_type(void);
void* nw_network_agent_get_use_count(void);
void* nw_network_agent_is_active(void);
void* nw_network_agent_is_kernel_activated(void);
void* nw_network_agent_is_user_activated(void);
void* nw_network_agent_is_voluntary(void);
void* nw_network_agent_open_control_socket(void);
void* nw_network_agent_register(void);
void* nw_network_agent_release(void);
void* nw_network_agent_remove_from_interface(void);
void* nw_network_agent_set_use_count(void);
void* nw_network_agent_start(void);
void* nw_network_agent_stop(void);
void* nw_network_agent_unregister(void);
void* nw_network_agent_update_registration(void);
void* nw_nexus_bind_client_port(void);
void* nw_nexus_close(void);
void* nw_nexus_close_channel_and_instance(void);
void* nw_nexus_create(void);
void* nw_nexus_create_channel_to_new_instance(void);
void* nw_pac_resolver_create_with_script(void);
void* nw_pac_resolver_create_with_url(void);
void* nw_pac_resolver_start(void);
void* nw_packet_hash_table_create(void);
void* nw_parallel_array_append(void);
void* nw_parallel_array_apply(void);
void* nw_parallel_array_apply_with_range(void);
void* nw_parallel_array_contains(void);
void* nw_parallel_array_copy(void);
void* nw_parallel_array_create(void);
void* nw_parallel_array_find(void);
void* nw_parallel_array_get_at_index(void);
void* nw_parallel_array_get_count(void);
void* nw_parallel_array_is_equal(void);
void* nw_parallel_array_remove_at_index(void);
void* nw_parameters_add_protocol_stack_member(void);
void* nw_parameters_add_proxy_options(void);
void* nw_parameters_add_to_protocol_stack(void);
void* nw_parameters_are_compatible(void);
void* nw_parameters_are_valid(void);
void* nw_parameters_clear_prohibited_interface_types(void);
void* nw_parameters_clear_prohibited_interfaces(void);
void* nw_parameters_clear_protocol_stack(void);
void* nw_parameters_clear_proxy_options(void);
void* nw_parameters_copy(void);
void* nw_parameters_copy_avoided_netagent_domains(void);
void* nw_parameters_copy_avoided_netagent_types(void);
void* nw_parameters_copy_avoided_netagent_uuids(void);
void* nw_parameters_copy_connected(void);
void* nw_parameters_copy_context(void);
void* nw_parameters_copy_default_protocol_stack(void);
void* nw_parameters_copy_description(void);
void* nw_parameters_copy_dictionary(void);
void* nw_parameters_copy_effective_proxy_settings(void);
void* nw_parameters_copy_initial_data_payload(void);
void* nw_parameters_copy_local_address(void);
void* nw_parameters_copy_local_endpoint(void);
void* nw_parameters_copy_metadata(void);
void* nw_parameters_copy_path_parameters(void);
void* nw_parameters_copy_preferred_netagent_domains(void);
void* nw_parameters_copy_preferred_netagent_types(void);
void* nw_parameters_copy_preferred_netagent_uuids(void);
void* nw_parameters_copy_prohibited_interface_subtypes(void);
void* nw_parameters_copy_prohibited_interface_types(void);
void* nw_parameters_copy_prohibited_interfaces(void);
void* nw_parameters_copy_prohibited_netagent_domains(void);
void* nw_parameters_copy_prohibited_netagent_types(void);
void* nw_parameters_copy_prohibited_netagent_uuids(void);
void* nw_parameters_copy_protocol_options(void);
void* nw_parameters_copy_protocol_options_for_definition(void);
void* nw_parameters_copy_protocol_options_legacy(void);
void* nw_parameters_copy_protocol_value(void);
void* nw_parameters_copy_proxy_configuration(void);
void* nw_parameters_copy_required_interface(void);
void* nw_parameters_copy_required_netagent_domains(void);
void* nw_parameters_copy_required_netagent_types(void);
void* nw_parameters_copy_required_netagent_uuids(void);
void* nw_parameters_copy_tls_session_id(void);
void* nw_parameters_copy_transform_array(void);
void* nw_parameters_copy_url_endpoint(void);
void* nw_parameters_create(void);
void* nw_parameters_create_custom_ip(void);
void* nw_parameters_create_empty_stack(void);
void* nw_parameters_create_from_dictionary(void);
void* nw_parameters_create_legacy_tcp_socket(void);
void* nw_parameters_create_protocol_parameters(void);
void* nw_parameters_create_quic_connection(void);
void* nw_parameters_create_quic_connection_with_tls_fallback(void);
void* nw_parameters_create_quic_stream(void);
void* nw_parameters_create_quic_stream_with_tls_fallback(void);
void* nw_parameters_create_secure_tcp(void);
void* nw_parameters_create_secure_udp(void);
void* nw_parameters_get_account_id(void);
void* nw_parameters_get_allow_duplicate_state_updates(void);
void* nw_parameters_get_allow_joining_connected_fd(void);
void* nw_parameters_get_allow_socket_access(void);
void* nw_parameters_get_allow_unusable_addresses(void);
void* nw_parameters_get_always_open_listener_socket(void);
void* nw_parameters_get_attach_protocol_listener(void);
void* nw_parameters_get_background_traffic_management(void);
void* nw_parameters_get_bundle_id_to_uuid_mapping_failed(void);
void* nw_parameters_get_companion_link_upgrade_preference(void);
void* nw_parameters_get_companion_preference(void);
void* nw_parameters_get_context_privacy_level(void);
void* nw_parameters_get_data_mode(void);
void* nw_parameters_get_delegated_unique_pid(void);
void* nw_parameters_get_desperate_ivan(void);
void* nw_parameters_get_discretionary(void);
void* nw_parameters_get_dry_run(void);
void* nw_parameters_get_e_proc_uuid(void);
void* nw_parameters_get_ecn_mode(void);
void* nw_parameters_get_effective_audit_token(void);
void* nw_parameters_get_effective_bundle_id(void);
void* nw_parameters_get_expected_workload(void);
void* nw_parameters_get_expired_dns_behavior(void);
void* nw_parameters_get_fast_open_enabled(void);
void* nw_parameters_get_fast_open_force_enable(void);
void* nw_parameters_get_hash(void);
void* nw_parameters_get_https_proxy_is_opaque(void);
void* nw_parameters_get_https_proxy_over_tls(void);
void* nw_parameters_get_ignore_resolver_stats(void);
void* nw_parameters_get_include_peer_to_peer(void);
void* nw_parameters_get_indefinite(void);
void* nw_parameters_get_indefinite_set(void);
void* nw_parameters_get_ip_protocol(void);
void* nw_parameters_get_is_probe(void);
void* nw_parameters_get_keepalive_enabled(void);
void* nw_parameters_get_keepalive_idle_time(void);
void* nw_parameters_get_keepalive_interval(void);
void* nw_parameters_get_keepalive_offload(void);
void* nw_parameters_get_local_address_preference(void);
void* nw_parameters_get_local_only(void);
void* nw_parameters_get_maximum_tls_protocol_version(void);
void* nw_parameters_get_minimum_tls_protocol_version(void);
void* nw_parameters_get_multipath(void);
void* nw_parameters_get_multipath_force_enable(void);
void* nw_parameters_get_multipath_service(void);
void* nw_parameters_get_no_cellular_fallback(void);
void* nw_parameters_get_no_delay(void);
void* nw_parameters_get_no_fallback(void);
void* nw_parameters_get_no_fullstack_fallback(void);
void* nw_parameters_get_no_opaque_proxy(void);
void* nw_parameters_get_no_proxy(void);
void* nw_parameters_get_no_proxy_path_selection(void);
void* nw_parameters_get_no_transform(void);
void* nw_parameters_get_only_primary_requires_type(void);
void* nw_parameters_get_parent_id(void);
void* nw_parameters_get_pid(void);
void* nw_parameters_get_pid_to_uuid_mapping_failed(void);
void* nw_parameters_get_prefer_no_proxy(void);
void* nw_parameters_get_proc_uuid(void);
void* nw_parameters_get_prohibit_cellular(void);
void* nw_parameters_get_prohibit_constrained(void);
void* nw_parameters_get_prohibit_expensive(void);
void* nw_parameters_get_prohibit_joining_protocols(void);
void* nw_parameters_get_prohibit_roaming(void);
void* nw_parameters_get_protocol_count(void);
void* nw_parameters_get_proxy_bundle_id(void);
void* nw_parameters_get_receive_any_interface(void);
void* nw_parameters_get_reduce_buffering(void);
void* nw_parameters_get_required_address_family(void);
void* nw_parameters_get_required_interface_index(void);
void* nw_parameters_get_required_interface_subtype(void);
void* nw_parameters_get_required_interface_type(void);
void* nw_parameters_get_resolve_ptr(void);
void* nw_parameters_get_reuse_local_address(void);
void* nw_parameters_get_sanitized_url(void);
void* nw_parameters_get_self_bundle_id(void);
void* nw_parameters_get_server_mode(void);
void* nw_parameters_get_service_class(void);
void* nw_parameters_get_should_skip_probe_sampling(void);
void* nw_parameters_get_should_trust_invalid_certificates(void);
void* nw_parameters_get_sleep_keepalive_interval(void);
void* nw_parameters_get_ssl_cipher_suites(void);
void* nw_parameters_get_tfo(void);
void* nw_parameters_get_tfo_no_cookie(void);
void* nw_parameters_get_tls(void);
void* nw_parameters_get_tls13_enabled(void);
void* nw_parameters_get_tls_experiments_enabled(void);
void* nw_parameters_get_tls_session_ticket_enabled(void);
void* nw_parameters_get_traffic_class(void);
void* nw_parameters_get_uid(void);
void* nw_parameters_get_upper_transport_protocol(void);
void* nw_parameters_get_upper_transport_protocol_options(void);
void* nw_parameters_get_url(void);
void* nw_parameters_get_use_awdl(void);
void* nw_parameters_get_use_long_outstanding_queries(void);
void* nw_parameters_get_use_p2p(void);
void* nw_parameters_get_use_tfo_heuristics(void);
void* nw_parameters_has_delegated_proc_pid(void);
void* nw_parameters_has_delegated_proc_uuid(void);
void* nw_parameters_has_initial_data_payload(void);
void* nw_parameters_has_non_empty_proxy_configuration(void);
void* nw_parameters_has_preferred_netagents(void);
void* nw_parameters_has_prohibited_interface_subtypes(void);
void* nw_parameters_has_prohibited_interface_types(void);
void* nw_parameters_has_prohibited_interfaces(void);
void* nw_parameters_has_prohibited_netagents(void);
void* nw_parameters_has_protocol_at_level(void);
void* nw_parameters_has_protocol_in_stack(void);
void* nw_parameters_has_required_interface_subtype(void);
void* nw_parameters_has_required_interface_type(void);
void* nw_parameters_has_required_netagents(void);
void* nw_parameters_has_transforms(void);
void* nw_parameters_internal_iterate_protocol_stack(void);
void* nw_parameters_is_custom_protocols_only(void);
void* nw_parameters_is_equal(void);
void* nw_parameters_is_fallback(void);
void* nw_parameters_iterate_prohibited_interface_types(void);
void* nw_parameters_iterate_prohibited_interfaces(void);
void* nw_parameters_multipath_fallback_allowed(void);
void* nw_parameters_prohibit_interface(void);
void* nw_parameters_prohibit_interface_type(void);
void* nw_parameters_remove_definition_from_protocol_stack(void);
void* nw_parameters_remove_from_protocol_stack(void);
void* nw_parameters_require_interface(void);
void* nw_parameters_set_account_id(void);
void* nw_parameters_set_allow_duplicate_state_updates(void);
void* nw_parameters_set_allow_joining_connected_fd(void);
void* nw_parameters_set_allow_socket_access(void);
void* nw_parameters_set_allow_unusable_addresses(void);
void* nw_parameters_set_always_open_listener_socket(void);
void* nw_parameters_set_attach_protocol_listener(void);
void* nw_parameters_set_avoided_netagent_classes(void);
void* nw_parameters_set_avoided_netagent_uuids(void);
void* nw_parameters_set_background_traffic_management(void);
void* nw_parameters_set_companion_link_upgrade_preference(void);
void* nw_parameters_set_companion_preference(void);
void* nw_parameters_set_context(void);
void* nw_parameters_set_custom_protocols_only(void);
void* nw_parameters_set_data_mode(void);
void* nw_parameters_set_delegated_unique_pid(void);
void* nw_parameters_set_desperate_ivan(void);
void* nw_parameters_set_discretionary(void);
void* nw_parameters_set_dry_run(void);
void* nw_parameters_set_e_proc_uuid(void);
void* nw_parameters_set_ecn_mode(void);
void* nw_parameters_set_effective_audit_token(void);
void* nw_parameters_set_effective_bundle_id(void);
void* nw_parameters_set_effective_proxy_settings(void);
void* nw_parameters_set_expected_workload(void);
void* nw_parameters_set_expired_dns_behavior(void);
void* nw_parameters_set_fast_open_enabled(void);
void* nw_parameters_set_fast_open_force_enable(void);
void* nw_parameters_set_https_proxy_is_opaque(void);
void* nw_parameters_set_https_proxy_over_tls(void);
void* nw_parameters_set_ignore_resolver_stats(void);
void* nw_parameters_set_include_peer_to_peer(void);
void* nw_parameters_set_indefinite(void);
void* nw_parameters_set_initial_data_payload(void);
void* nw_parameters_set_is_fallback(void);
void* nw_parameters_set_is_probe(void);
void* nw_parameters_set_keepalive_enabled(void);
void* nw_parameters_set_keepalive_idle_time(void);
void* nw_parameters_set_keepalive_interval(void);
void* nw_parameters_set_keepalive_offload(void);
void* nw_parameters_set_local_address(void);
void* nw_parameters_set_local_address_preference(void);
void* nw_parameters_set_local_endpoint(void);
void* nw_parameters_set_local_only(void);
void* nw_parameters_set_maximum_tls_protocol_version(void);
void* nw_parameters_set_metadata(void);
void* nw_parameters_set_minimum_tls_protocol_version(void);
void* nw_parameters_set_multipath(void);
void* nw_parameters_set_multipath_force_enable(void);
void* nw_parameters_set_multipath_service(void);
void* nw_parameters_set_no_cellular_fallback(void);
void* nw_parameters_set_no_delay(void);
void* nw_parameters_set_no_fallback(void);
void* nw_parameters_set_no_fullstack_fallback(void);
void* nw_parameters_set_no_opaque_proxy(void);
void* nw_parameters_set_no_proxy(void);
void* nw_parameters_set_no_proxy_path_selection(void);
void* nw_parameters_set_no_transform(void);
void* nw_parameters_set_only_primary_requires_type(void);
void* nw_parameters_set_parent_id(void);
void* nw_parameters_set_pid(void);
void* nw_parameters_set_prefer_no_proxy(void);
void* nw_parameters_set_preferred_netagent_classes(void);
void* nw_parameters_set_preferred_netagent_uuids(void);
void* nw_parameters_set_proc_uuid(void);
void* nw_parameters_set_prohibit_constrained(void);
void* nw_parameters_set_prohibit_expensive(void);
void* nw_parameters_set_prohibit_joining_protocols(void);
void* nw_parameters_set_prohibit_roaming(void);
void* nw_parameters_set_prohibited_interface_subtypes(void);
void* nw_parameters_set_prohibited_interface_types(void);
void* nw_parameters_set_prohibited_interfaces(void);
void* nw_parameters_set_prohibited_netagent_classes(void);
void* nw_parameters_set_prohibited_netagent_uuids(void);
void* nw_parameters_set_protocol_instance(void);
void* nw_parameters_set_protocol_value(void);
void* nw_parameters_set_proxy_bundle_id(void);
void* nw_parameters_set_proxy_configuration(void);
void* nw_parameters_set_receive_any_interface(void);
void* nw_parameters_set_reduce_buffering(void);
void* nw_parameters_set_required_address_family(void);
void* nw_parameters_set_required_interface_subtype(void);
void* nw_parameters_set_required_interface_type(void);
void* nw_parameters_set_required_netagent_classes(void);
void* nw_parameters_set_required_netagent_uuids(void);
void* nw_parameters_set_resolve_ptr(void);
void* nw_parameters_set_reuse_local_address(void);
void* nw_parameters_set_server_mode(void);
void* nw_parameters_set_service_class(void);
void* nw_parameters_set_should_skip_probe_sampling(void);
void* nw_parameters_set_should_trust_invalid_certificates(void);
void* nw_parameters_set_sleep_keepalive_interval(void);
void* nw_parameters_set_source_application(void);
void* nw_parameters_set_source_application_by_bundle_id(void);
void* nw_parameters_set_source_application_by_bundle_id_internal(void);
void* nw_parameters_set_source_application_by_external_bundle_id(void);
void* nw_parameters_set_ssl_cipher_suites(void);
void* nw_parameters_set_tfo(void);
void* nw_parameters_set_tfo_no_cookie(void);
void* nw_parameters_set_tls(void);
void* nw_parameters_set_tls13_enabled(void);
void* nw_parameters_set_tls_enforce_ev(void);
void* nw_parameters_set_tls_experiments_enabled(void);
void* nw_parameters_set_tls_session_id(void);
void* nw_parameters_set_tls_session_ticket_enabled(void);
void* nw_parameters_set_traffic_class(void);
void* nw_parameters_set_transform_array(void);
void* nw_parameters_set_uid(void);
void* nw_parameters_set_url(void);
void* nw_parameters_set_url_endpoint(void);
void* nw_parameters_set_use_awdl(void);
void* nw_parameters_set_use_long_outstanding_queries(void);
void* nw_parameters_set_use_p2p(void);
void* nw_parameters_set_use_tfo_heuristics(void);
void* nw_path_allows_multipath(void);
void* nw_path_assert_agent(void);
void* nw_path_assert_required_agents(void);
void* nw_path_can_resolve_endpoint(void);
void* nw_path_can_support_endpoint(void);
void* nw_path_changed_from_previous(void);
void* nw_path_copy_advertise_descriptor(void);
void* nw_path_copy_all_client_ids(void);
void* nw_path_copy_all_local_paths(void);
void* nw_path_copy_browse_descriptor(void);
void* nw_path_copy_connected_interface(void);
void* nw_path_copy_delegate_interface(void);
void* nw_path_copy_derived_parameters(void);
void* nw_path_copy_description(void);
void* nw_path_copy_direct_interface(void);
void* nw_path_copy_discovered_endpoints(void);
void* nw_path_copy_effective_local_endpoint(void);
void* nw_path_copy_effective_remote_endpoint(void);
void* nw_path_copy_endpoint(void);
void* nw_path_copy_endpoint_from_tlv(void);
void* nw_path_copy_flow_divert_token(void);
void* nw_path_copy_flow_registration(void);
void* nw_path_copy_flows(void);
void* nw_path_copy_for_flow_registration(void);
void* nw_path_copy_gateways(void);
void* nw_path_copy_inactive_agent_uuids(void);
void* nw_path_copy_interface(void);
void* nw_path_copy_interface_from_cache(void);
void* nw_path_copy_netagent_dictionary(void);
void* nw_path_copy_parameters(void);
void* nw_path_copy_path_for_client(void);
void* nw_path_copy_proxy_settings(void);
void* nw_path_copy_resolved_endpoints(void);
void* nw_path_copy_scoped_interface(void);
void* nw_path_create_assign_message(void);
void* nw_path_create_browse_result(void);
void* nw_path_create_default_evaluator(void);
void* nw_path_create_evaluator_for_advertise(void);
void* nw_path_create_evaluator_for_browse(void);
void* nw_path_create_evaluator_for_client_id(void);
void* nw_path_create_evaluator_for_custom_ether(void);
void* nw_path_create_evaluator_for_custom_ip(void);
void* nw_path_create_evaluator_for_endpoint(void);
void* nw_path_create_evaluator_for_interpose(void);
void* nw_path_create_evaluator_for_listener(void);
void* nw_path_create_from_tlv(void);
void* nw_path_create_necp_parameters(void);
void* nw_path_create_observer(void);
void* nw_path_create_resolve_result(void);
void* nw_path_create_static(void);
void* nw_path_endpoint_is_always_satisfied(void);
void* nw_path_enumerate_browse_options(void);
void* nw_path_enumerate_gateways(void);
void* nw_path_enumerate_interface_options(void);
void* nw_path_enumerate_interfaces(void);
void* nw_path_enumerate_resolve_options(void);
void* nw_path_evaluator_add_endpoint_to_necp_message(void);
void* nw_path_evaluator_cancel(void);
void* nw_path_evaluator_copy_description(void);
void* nw_path_evaluator_copy_path(void);
void* nw_path_evaluator_create_flow(void);
void* nw_path_evaluator_force_update(void);
void* nw_path_evaluator_get_client_id(void);
void* nw_path_evaluator_get_error_string(void);
void* nw_path_evaluator_request_nexus(void);
void* nw_path_evaluator_set_cancel_handler(void);
void* nw_path_evaluator_set_queue(void);
void* nw_path_evaluator_set_update_handler(void);
void* nw_path_evaluator_start(void);
void* nw_path_evaluator_trigger_agents(void);
void* nw_path_fallback_is_forced(void);
void* nw_path_fallback_is_weak(void);
void* nw_path_fallback_should_not_use_timer(void);
void* nw_path_fillout_route_stats(void);
void* nw_path_flow_copy_description(void);
void* nw_path_flow_copy_interface(void);
void* nw_path_flow_copy_local_endpoint(void);
void* nw_path_flow_copy_remote_endpoint(void);
void* nw_path_flow_create(void);
void* nw_path_flow_ecn_enabled(void);
void* nw_path_flow_fast_open_blocked(void);
void* nw_path_flow_get_id(void);
void* nw_path_flow_get_nexus_agent_uuid(void);
void* nw_path_flow_get_nexus_instance(void);
void* nw_path_flow_get_nexus_key(void);
void* nw_path_flow_has_ipv4(void);
void* nw_path_flow_has_ipv6(void);
void* nw_path_flow_ids_are_equal(void);
void* nw_path_flow_is_assigned(void);
void* nw_path_flow_is_defunct(void);
void* nw_path_flow_is_direct(void);
void* nw_path_flow_is_equal(void);
void* nw_path_flow_is_local(void);
void* nw_path_flow_is_viable(void);
void* nw_path_flow_nexus_can_support_user_packet_pool(void);
void* nw_path_flow_nexus_should_use_event_ring(void);
void* nw_path_flow_registration_access_interface_stats(void);
void* nw_path_flow_registration_clear_stats_regions(void);
void* nw_path_flow_registration_close(void);
void* nw_path_flow_registration_copy_description(void);
void* nw_path_flow_registration_ecn_enabled(void);
void* nw_path_flow_registration_fast_open_blocked(void);
void* nw_path_flow_registration_get_advisory_region(void);
void* nw_path_flow_registration_get_ctl_command(void);
void* nw_path_flow_registration_get_id(void);
void* nw_path_flow_registration_get_nexus_flow_index(void);
void* nw_path_flow_registration_get_nexus_instance(void);
void* nw_path_flow_registration_get_nexus_key(void);
void* nw_path_flow_registration_get_partial_checksum_offload(void);
void* nw_path_flow_registration_get_stats_area(void);
void* nw_path_flow_registration_get_stats_region(void);
void* nw_path_flow_registration_get_tfo_cookie(void);
void* nw_path_flow_registration_get_tfo_cookie_len(void);
void* nw_path_flow_registration_override_interface_types(void);
void* nw_path_flow_registration_override_traffic_class(void);
void* nw_path_flow_registration_set_advisory_region(void);
void* nw_path_flow_registration_set_ecn_cache(void);
void* nw_path_flow_registration_set_partial_checksum_offload(void);
void* nw_path_flow_registration_set_stats_region(void);
void* nw_path_flow_registration_set_tfo_cache(void);
void* nw_path_flow_registration_uses_nexus(void);
void* nw_path_get_client_id(void);
void* nw_path_get_connected_interface_index(void);
void* nw_path_get_custom_ethertype(void);
void* nw_path_get_dns_search_domains(void);
void* nw_path_get_dns_servers(void);
void* nw_path_get_dns_service_id(void);
void* nw_path_get_effective_traffic_class(void);
void* nw_path_get_fallback_agent(void);
void* nw_path_get_fallback_generation(void);
void* nw_path_get_fallback_interface_index(void);
void* nw_path_get_filter_unit(void);
void* nw_path_get_flow_divert_unit(void);
void* nw_path_get_interface_index(void);
void* nw_path_get_interface_option_count(void);
void* nw_path_get_interface_time_delta(void);
void* nw_path_get_ipv4_network_signature(void);
void* nw_path_get_ipv6_network_signature(void);
void* nw_path_get_maximum_datagram_size(void);
void* nw_path_get_maximum_packet_size(void);
void* nw_path_get_mtu(void);
void* nw_path_get_nexus_agent_uuid(void);
void* nw_path_get_nexus_agent_uuid_check_assertion(void);
void* nw_path_get_nexus_flow_index(void);
void* nw_path_get_nexus_instance(void);
void* nw_path_get_nexus_key(void);
void* nw_path_get_nexus_protocol_level(void);
void* nw_path_get_policy_id(void);
void* nw_path_get_private_dns_config_id(void);
void* nw_path_get_reason(void);
void* nw_path_get_reason_description(void);
void* nw_path_get_recommended_mss(void);
void* nw_path_get_rtt_values(void);
void* nw_path_get_scoped_interface_index(void);
void* nw_path_get_status(void);
void* nw_path_get_sysctls_region(void);
void* nw_path_get_vpn_config_id(void);
void* nw_path_has_advertise_descriptor(void);
void* nw_path_has_browse_descriptor(void);
void* nw_path_has_dns(void);
void* nw_path_has_flow_for_nexus_agent(void);
void* nw_path_has_ipv4(void);
void* nw_path_has_ipv6(void);
void* nw_path_has_proxy_settings(void);
void* nw_path_has_unsatisfied_cellular_agent(void);
void* nw_path_has_unsatisfied_fallback_agent(void);
void* nw_path_has_unsatisfied_route(void);
void* nw_path_increment_agent_use_count(void);
void* nw_path_ipv4_default_address(void);
void* nw_path_ipv6_default_address(void);
void* nw_path_is_constrained(void);
void* nw_path_is_defunct(void);
void* nw_path_is_direct(void);
void* nw_path_is_eligible_for_CrazyIvan46(void);
void* nw_path_is_equal(void);
void* nw_path_is_equal_inner(void);
void* nw_path_is_expensive(void);
void* nw_path_is_flow_divert(void);
void* nw_path_is_listener(void);
void* nw_path_is_local(void);
void* nw_path_is_multilayer_packet_logging_enabled(void);
void* nw_path_is_override_constrained(void);
void* nw_path_is_override_expensive(void);
void* nw_path_is_per_app_vpn(void);
void* nw_path_is_preferred(void);
void* nw_path_is_roaming(void);
void* nw_path_is_traffic_mgmt_background(void);
void* nw_path_is_tunnelled(void);
void* nw_path_is_viable(void);
void* nw_path_link_quality_abort(void);
void* nw_path_listener_is_interface_specific(void);
void* nw_path_listener_uses_nexus_only(void);
void* nw_path_may_span_multiple_interfaces(void);
void* nw_path_monitor_cancel(void);
void* nw_path_monitor_create(void);
void* nw_path_monitor_create_with_type(void);
void* nw_path_monitor_set_cancel_handler(void);
void* nw_path_monitor_set_queue(void);
void* nw_path_monitor_set_update_handler(void);
void* nw_path_monitor_start(void);
void* nw_path_nexus_can_support_user_packet_pool(void);
void* nw_path_nexus_should_use_event_ring(void);
void* nw_path_observer_cancel(void);
void* nw_path_override_interface(void);
void* nw_path_override_local_endpoint(void);
void* nw_path_override_viable(void);
void* nw_path_parameters_are_equal(void);
void* nw_path_parameters_copy_context(void);
void* nw_path_parameters_get_context_privacy_level(void);
void* nw_path_parameters_get_hash(void);
void* nw_path_parent_has_forked(void);
void* nw_path_parse_necp_parameters(void);
void* nw_path_prepare_fork(void);
void* nw_path_request_nexus(void);
void* nw_path_set_proxy_settings(void);
void* nw_path_set_reason(void);
void* nw_path_should_fallback(void);
void* nw_path_should_probe_connectivity(void);
void* nw_path_should_transform(void);
void* nw_path_should_use_proxy(void);
void* nw_path_status_get_description(void);
void* nw_path_supports_browse(void);
void* nw_path_trigger_agent(void);
void* nw_path_trigger_inactive_cellular_agent_if_necessary(void);
void* nw_path_unassert_agent(void);
void* nw_path_update_parameters_for_fallback(void);
void* nw_path_uses_interface_subtype(void);
void* nw_path_uses_interface_type(void);
void* nw_path_uses_nexus(void);
void* nw_path_voluntary_agent_matches_address(void);
void* nw_protocol_can_join_existing(void);
void* nw_protocol_copy_ip_definition(void);
void* nw_protocol_copy_quic_connection_definition(void);
void* nw_protocol_copy_quic_stream_definition(void);
void* nw_protocol_copy_subdata(void);
void* nw_protocol_copy_superdata(void);
void* nw_protocol_copy_tcp_definition(void);
void* nw_protocol_copy_tls_definition(void);
void* nw_protocol_copy_udp_definition(void);
void* nw_protocol_copy_ws_definition(void);
void* nw_protocol_create(void);
void* nw_protocol_create_inbound_data(void);
void* nw_protocol_create_options(void);
void* nw_protocol_data_access_buffer(void);
void* nw_protocol_data_array_append(void);
void* nw_protocol_data_array_apply(void);
void* nw_protocol_data_array_apppend_array(void);
void* nw_protocol_data_array_count(void);
void* nw_protocol_data_array_create(void);
void* nw_protocol_data_array_data_length(void);
void* nw_protocol_data_array_first(void);
void* nw_protocol_data_array_insert_after(void);
void* nw_protocol_data_array_is_empty(void);
void* nw_protocol_data_array_last(void);
void* nw_protocol_data_array_next(void);
void* nw_protocol_data_array_prepend(void);
void* nw_protocol_data_array_prepend_array(void);
void* nw_protocol_data_array_remove(void);
void* nw_protocol_data_get_size(void);
void* nw_protocol_data_is_in_array(void);
void* nw_protocol_data_trim(void);
void* nw_protocol_definition_create(void);
void* nw_protocol_definition_create_named(void);
void* nw_protocol_definition_create_with_identifier(void);
void* nw_protocol_definition_get_identifier(void);
void* nw_protocol_definition_get_variant(void);
void* nw_protocol_definition_is_equal(void);
void* nw_protocol_definition_register(void);
void* nw_protocol_definition_set_cache_entry_deallocator(void);
void* nw_protocol_definition_set_copy_establishment_report(void);
void* nw_protocol_definition_set_copy_metadata(void);
void* nw_protocol_definition_set_custom_flow_map_key_size(void);
void* nw_protocol_definition_set_destroy(void);
void* nw_protocol_definition_set_flow_state_allocator(void);
void* nw_protocol_definition_set_globals_allocator(void);
void* nw_protocol_definition_set_handle_error(void);
void* nw_protocol_definition_set_handle_inbound(void);
void* nw_protocol_definition_set_handle_outbound(void);
void* nw_protocol_definition_set_inbound_events(void);
void* nw_protocol_definition_set_initialize(void);
void* nw_protocol_definition_set_instance_state_allocator(void);
void* nw_protocol_definition_set_link_state_update(void);
void* nw_protocol_definition_set_metadata_allocator(void);
void* nw_protocol_definition_set_metadata_copy_message_options(void);
void* nw_protocol_definition_set_metadata_copy_reply(void);
void* nw_protocol_definition_set_options_allocator(void);
void* nw_protocol_definition_set_options_equality_check(void);
void* nw_protocol_definition_set_outbound_events(void);
void* nw_protocol_definition_set_should_flush_cache_entry(void);
void* nw_protocol_definition_set_start(void);
void* nw_protocol_definition_set_stop(void);
void* nw_protocol_definition_unregister(void);
void* nw_protocol_establishment_report_create(void);
void* nw_protocol_find_instance_to_join(void);
void* nw_protocol_get_quic_connection_protocol_identifier(void);
void* nw_protocol_get_quic_stream_protocol_identifier(void);
void* nw_protocol_get_tcp_identifier(void);
void* nw_protocol_hash_table_create(void);
void* nw_protocol_http2_transport_identifier(void);
void* nw_protocol_http2_transport_parameters_set_connection_receive_window_size(void);
void* nw_protocol_http2_transport_parameters_set_stream_receive_window_size(void);
void* nw_protocol_http2_transport_parameters_set_tunnel_teardown_delay(void);
void* nw_protocol_input_handler_is_connection_flow(void);
void* nw_protocol_instance_access_cached_content(void);
void* nw_protocol_instance_access_flow_state(void);
void* nw_protocol_instance_access_globals(void);
void* nw_protocol_instance_access_state(void);
void* nw_protocol_instance_add_inbound(void);
void* nw_protocol_instance_add_new_flow(void);
void* nw_protocol_instance_add_outbound(void);
void* nw_protocol_instance_clear_flow_for_key(void);
void* nw_protocol_instance_copy_definition(void);
void* nw_protocol_instance_copy_options(void);
void* nw_protocol_instance_copy_path(void);
void* nw_protocol_instance_enumerate_flow_keys(void);
void* nw_protocol_instance_enumerate_flows(void);
void* nw_protocol_instance_get_flow_for_key(void);
void* nw_protocol_instance_get_stats(void);
void* nw_protocol_instance_get_stats_region(void);
void* nw_protocol_instance_notify_updated_metadata(void);
void* nw_protocol_instance_report_done(void);
void* nw_protocol_instance_report_ready(void);
void* nw_protocol_instance_schedule_wakeup(void);
void* nw_protocol_instance_set_allow_buffering(void);
void* nw_protocol_instance_set_cached_content(void);
void* nw_protocol_instance_set_flow_for_key(void);
void* nw_protocol_instance_set_is_datagram(void);
void* nw_protocol_instance_set_limit_outbound_data(void);
void* nw_protocol_instance_set_maximum_content_size(void);
void* nw_protocol_instance_set_reserve_footer_size(void);
void* nw_protocol_instance_set_reserve_header_size(void);
void* nw_protocol_instance_set_wakeup_handler(void);
void* nw_protocol_instance_update_outbound_data_limit(void);
void* nw_protocol_is_registered(void);
void* nw_protocol_metadata_access_handle(void);
void* nw_protocol_metadata_copy_definition(void);
void* nw_protocol_metadata_copy_identifier(void);
void* nw_protocol_metadata_copy_message_options(void);
void* nw_protocol_metadata_copy_original(void);
void* nw_protocol_metadata_create(void);
void* nw_protocol_metadata_create_reply(void);
void* nw_protocol_metadata_create_singleton(void);
void* nw_protocol_metadata_is_framer_message(void);
void* nw_protocol_metadata_is_ip(void);
void* nw_protocol_metadata_is_quic_connection(void);
void* nw_protocol_metadata_is_quic_stream(void);
void* nw_protocol_metadata_is_tcp(void);
void* nw_protocol_metadata_is_tls(void);
void* nw_protocol_metadata_is_udp(void);
void* nw_protocol_metadata_is_ws(void);
void* nw_protocol_metadata_set_original(void);
void* nw_protocol_metadata_supports_replies(void);
void* nw_protocol_modify_parameters(void);
void* nw_protocol_notification_type_to_string(void);
void* nw_protocol_option_is_equal(void);
void* nw_protocol_options_access_handle(void);
void* nw_protocol_options_copy(void);
void* nw_protocol_options_copy_definition(void);
void* nw_protocol_options_get_hash(void);
void* nw_protocol_options_get_log_id_num(void);
void* nw_protocol_options_get_log_id_str(void);
void* nw_protocol_options_is_quic(void);
void* nw_protocol_options_is_quic_connection(void);
void* nw_protocol_options_is_quic_stream(void);
void* nw_protocol_options_is_tcp(void);
void* nw_protocol_parameters_copy_value(void);
void* nw_protocol_parameters_get_identifier(void);
void* nw_protocol_parameters_iterate_stack(void);
void* nw_protocol_recorder_identifier(void);
void* nw_protocol_register(void);
void* nw_protocol_register_extended(void);
void* nw_protocol_register_handle(void);
void* nw_protocol_register_many_to_one(void);
void* nw_protocol_register_parameter_modifier(void);
void* nw_protocol_remove_instance(void);
void* nw_protocol_request_outbound_data(void);
void* nw_protocol_set_default_one_to_one_callbacks(void);
void* nw_protocol_stack_append_application_protocol(void);
void* nw_protocol_stack_clear_application_protocols(void);
void* nw_protocol_stack_copy_application_protocols(void);
void* nw_protocol_stack_copy_internet_protocol(void);
void* nw_protocol_stack_copy_transport_protocol(void);
void* nw_protocol_stack_create_empty(void);
void* nw_protocol_stack_includes_protocol(void);
void* nw_protocol_stack_iterate_application_protocols(void);
void* nw_protocol_stack_prepend_application_protocol(void);
void* nw_protocol_stack_remove_protocol(void);
void* nw_protocol_stack_set_application_protocols(void);
void* nw_protocol_stack_set_internet_protocol(void);
void* nw_protocol_stack_set_transport_protocol(void);
void* nw_protocol_tcp_not_available(void);
void* nw_protocol_trainer_bottom_check_output(void);
void* nw_protocol_trainer_bottom_identifier(void);
void* nw_protocol_trainer_bottom_inject_input(void);
void* nw_protocol_trainer_bottom_notify_input(void);
void* nw_protocol_trainer_bottom_set_output_style(void);
void* nw_protocol_trainer_expect_frames_consumed(void);
void* nw_protocol_trainer_set_local(void);
void* nw_protocol_trainer_top_check_input(void);
void* nw_protocol_trainer_top_connect(void);
void* nw_protocol_trainer_top_disconnect(void);
void* nw_protocol_trainer_top_expect_connected(void);
void* nw_protocol_trainer_top_expect_disconnected(void);
void* nw_protocol_trainer_top_flush_output(void);
void* nw_protocol_trainer_top_identifier(void);
void* nw_protocol_trainer_top_inject_output(void);
void* nw_protocol_transform_append_protocol(void);
void* nw_protocol_transform_clear_protocols_at_level(void);
void* nw_protocol_transform_copy(void);
void* nw_protocol_transform_copy_endpoint(void);
void* nw_protocol_transform_create(void);
void* nw_protocol_transform_disable_protocol(void);
void* nw_protocol_transform_get_data_mode(void);
void* nw_protocol_transform_get_fallback_mode(void);
void* nw_protocol_transform_get_fast_open_force_enable(void);
void* nw_protocol_transform_get_hash(void);
void* nw_protocol_transform_get_multipath_service(void);
void* nw_protocol_transform_get_no_path_fallback(void);
void* nw_protocol_transform_get_no_proxy(void);
void* nw_protocol_transform_get_prohibit_direct(void);
void* nw_protocol_transform_get_tfo(void);
void* nw_protocol_transform_get_tfo_no_cookie(void);
void* nw_protocol_transform_get_use_tfo_heuristics(void);
void* nw_protocol_transform_is_equal(void);
void* nw_protocol_transform_modify_parameters(void);
void* nw_protocol_transform_replace_endpoint(void);
void* nw_protocol_transform_set_data_mode(void);
void* nw_protocol_transform_set_fallback_mode(void);
void* nw_protocol_transform_set_fast_open_force_enable(void);
void* nw_protocol_transform_set_multipath_service(void);
void* nw_protocol_transform_set_no_path_fallback(void);
void* nw_protocol_transform_set_no_proxy(void);
void* nw_protocol_transform_set_prohibit_direct(void);
void* nw_protocol_transform_set_tfo(void);
void* nw_protocol_transform_set_tfo_no_cookie(void);
void* nw_protocol_transform_set_use_tfo_heuristics(void);
void* nw_protocol_udp_identifier(void);
void* nw_protocol_unregister(void);
void* nw_protocols_are_equal(void);
void* nw_proxy_copy_http_connect_definition(void);
void* nw_proxy_create_options(void);
void* nw_proxy_options_set_authentication_challenge_handler(void);
void* nw_proxy_options_set_http_proxy_authorization_header(void);
void* nw_queue_activate_source(void);
void* nw_queue_assert_context(void);
void* nw_queue_async(void);
void* nw_queue_async_current(void);
void* nw_queue_cancel_source(void);
void* nw_queue_context_async(void);
void* nw_queue_context_async_if_needed(void);
void* nw_queue_context_create_source(void);
void* nw_queue_context_target_dispatch_queue(void);
void* nw_queue_create_source(void);
void* nw_queue_register_dispatch_queue(void);
void* nw_queue_resume_source(void);
void* nw_queue_set_timer_values(void);
void* nw_queue_source_get_data(void);
void* nw_queue_source_get_handle(void);
void* nw_queue_suspend_source(void);
void* nw_queue_target_dispatch_queue(void);
void* nw_quic_connection_copy_sec_protocol_metadata(void);
void* nw_quic_connection_copy_sec_protocol_options(void);
void* nw_quic_connection_get_idle_timeout(void);
void* nw_quic_connection_get_initial_max_data(void);
void* nw_quic_connection_get_initial_max_stream_data_bidirectional_local(void);
void* nw_quic_connection_get_initial_max_stream_data_bidirectional_remote(void);
void* nw_quic_connection_get_initial_max_stream_data_unidirectional(void);
void* nw_quic_connection_get_initial_max_streams_bidirectional(void);
void* nw_quic_connection_get_initial_max_streams_unidirectional(void);
void* nw_quic_connection_get_max_packet_size(void);
void* nw_quic_connection_get_max_streams_bidirectional(void);
void* nw_quic_connection_get_max_streams_bidirectional_handler(void);
void* nw_quic_connection_get_max_streams_unidirectional(void);
void* nw_quic_connection_get_max_streams_unidirectional_handler(void);
void* nw_quic_connection_metadata_set_stream_options(void);
void* nw_quic_connection_set_idle_timeout(void);
void* nw_quic_connection_set_initial_max_data(void);
void* nw_quic_connection_set_initial_max_stream_data_bidirectional_local(void);
void* nw_quic_connection_set_initial_max_stream_data_bidirectional_remote(void);
void* nw_quic_connection_set_initial_max_stream_data_unidirectional(void);
void* nw_quic_connection_set_initial_max_streams_bidirectional(void);
void* nw_quic_connection_set_initial_max_streams_unidirectional(void);
void* nw_quic_connection_set_max_data(void);
void* nw_quic_connection_set_max_data_handler(void);
void* nw_quic_connection_set_max_packet_size(void);
void* nw_quic_connection_set_max_stream_data_bidirectional_local(void);
void* nw_quic_connection_set_max_stream_data_bidirectional_local_handler(void);
void* nw_quic_connection_set_max_stream_data_bidirectional_remote(void);
void* nw_quic_connection_set_max_stream_data_bidirectional_remote_handler(void);
void* nw_quic_connection_set_max_stream_data_unidirectional(void);
void* nw_quic_connection_set_max_stream_data_unidirectional_handler(void);
void* nw_quic_connection_set_max_streams_bidirectional(void);
void* nw_quic_connection_set_max_streams_bidirectional_handler(void);
void* nw_quic_connection_set_max_streams_unidirectional(void);
void* nw_quic_connection_set_max_streams_unidirectional_handler(void);
void* nw_quic_connection_set_sec_protocol_metadata(void);
void* nw_quic_create_connection_metadata(void);
void* nw_quic_create_connection_options(void);
void* nw_quic_create_stream_options(void);
void* nw_quic_metadata_copy_stream_options(void);
void* nw_quic_metadata_set_original(void);
void* nw_quic_stream_copy_shared_connection_options(void);
void* nw_quic_stream_get_is_unidirectional(void);
void* nw_quic_stream_set_is_unidirectional(void);
void* nw_release(void);
void* nw_resolver_cancel(void);
void* nw_resolver_create_srv_weighted_variant(void);
void* nw_resolver_create_with_endpoint(void);
void* nw_resolver_create_with_path(void);
void* nw_resolver_get_error(void);
void* nw_resolver_get_status(void);
void* nw_resolver_inject_dns_service_error(void);
void* nw_resolver_set_cancel_handler(void);
void* nw_resolver_set_enable_esni(void);
void* nw_resolver_set_update_handler(void);
void* nw_retain(void);
void* nw_service_connector_cancel(void);
void* nw_service_connector_cancel_active_connection(void);
void* nw_service_connector_cancel_request(void);
void* nw_service_connector_create(void);
void* nw_service_connector_set_service_available_block(void);
void* nw_service_connector_start(void);
void* nw_service_connector_start_request(void);
void* nw_settings_register_boringssl_log_debug_updates(void);
void* nw_settings_register_networkd_privileged(void);
void* nw_settings_register_quic_log_debug_updates(void);
void* nw_settings_setup_atfork(void);
void* nw_shoes_server_cancel(void);
void* nw_shoes_server_copy_parameters(void);
void* nw_shoes_server_create(void);
void* nw_shoes_server_fillout_statistics(void);
void* nw_shoes_server_get_port(void);
void* nw_shoes_server_set_error_handler(void);
void* nw_shoes_server_set_state_changed_handler(void);
void* nw_shoes_server_start(void);
void* nw_socket_protocol_identifier(void);
void* nw_socks5_server_cancel(void);
void* nw_socks5_server_copy_parameters(void);
void* nw_socks5_server_create(void);
void* nw_socks5_server_get_port(void);
void* nw_socks5_server_set_error_handler(void);
void* nw_socks5_server_set_state_changed_handler(void);
void* nw_socks5_server_start(void);
void* nw_tcp_connection_copy_error(void);
void* nw_tcp_connection_set_tls_message_handler(void);
void* nw_tcp_connection_set_tls_prepare_handler(void);
void* nw_tcp_create_metadata(void);
void* nw_tcp_create_options(void);
void* nw_tcp_get_available_receive_buffer(void);
void* nw_tcp_get_available_send_buffer(void);
void* nw_tcp_options_get_connection_timeout(void);
void* nw_tcp_options_get_disable_ack_stretching(void);
void* nw_tcp_options_get_disable_blackhole_detection(void);
void* nw_tcp_options_get_disable_ecn(void);
void* nw_tcp_options_get_enable_background_traffic_management(void);
void* nw_tcp_options_get_enable_fast_open(void);
void* nw_tcp_options_get_enable_keepalive(void);
void* nw_tcp_options_get_enable_keepalive_offload(void);
void* nw_tcp_options_get_fast_open_force_enable(void);
void* nw_tcp_options_get_keepalive_count(void);
void* nw_tcp_options_get_keepalive_idle_time(void);
void* nw_tcp_options_get_keepalive_interval(void);
void* nw_tcp_options_get_maximum_segment_size(void);
void* nw_tcp_options_get_no_delay(void);
void* nw_tcp_options_get_no_fast_open_cookie(void);
void* nw_tcp_options_get_no_options(void);
void* nw_tcp_options_get_no_push(void);
void* nw_tcp_options_get_no_timewait(void);
void* nw_tcp_options_get_persist_timeout(void);
void* nw_tcp_options_get_reduce_buffering(void);
void* nw_tcp_options_get_retransmit_connection_drop_time(void);
void* nw_tcp_options_get_retransmit_fin_drop(void);
void* nw_tcp_options_set_connection_timeout(void);
void* nw_tcp_options_set_disable_ack_stretching(void);
void* nw_tcp_options_set_disable_blackhole_detection(void);
void* nw_tcp_options_set_disable_ecn(void);
void* nw_tcp_options_set_enable_background_traffic_management(void);
void* nw_tcp_options_set_enable_fast_open(void);
void* nw_tcp_options_set_enable_keepalive(void);
void* nw_tcp_options_set_enable_keepalive_offload(void);
void* nw_tcp_options_set_fast_open_force_enable(void);
void* nw_tcp_options_set_keepalive_count(void);
void* nw_tcp_options_set_keepalive_idle_time(void);
void* nw_tcp_options_set_keepalive_interval(void);
void* nw_tcp_options_set_maximum_segment_size(void);
void* nw_tcp_options_set_no_delay(void);
void* nw_tcp_options_set_no_fast_open_cookie(void);
void* nw_tcp_options_set_no_options(void);
void* nw_tcp_options_set_no_push(void);
void* nw_tcp_options_set_no_timewait(void);
void* nw_tcp_options_set_persist_timeout(void);
void* nw_tcp_options_set_reduce_buffering(void);
void* nw_tcp_options_set_retransmit_connection_drop_time(void);
void* nw_tcp_options_set_retransmit_fin_drop(void);
void* nw_tcp_set_callbacks(void);
void* nw_tls_copy_peer_certificates(void);
void* nw_tls_copy_sec_protocol_metadata(void);
void* nw_tls_copy_sec_protocol_options(void);
void* nw_tls_create_options(void);
void* nw_tls_create_peer_acceptable_distinguished_names(void);
void* nw_tls_create_peer_trust(void);
void* nw_tls_create_secret(void);
void* nw_tls_create_secret_with_context(void);
void* nw_tls_fetch_peer_public_key(void);
void* nw_tls_get_fallback(void);
void* nw_tls_get_false_start(void);
void* nw_tls_get_maximum_protocol_version(void);
void* nw_tls_get_maximum_ssl_protocol(void);
void* nw_tls_get_minimum_protocol_version(void);
void* nw_tls_get_minimum_ssl_protocol(void);
void* nw_tls_get_negotiated_cipher_spec(void);
void* nw_tls_get_negotiated_protocol_version(void);
void* nw_tls_get_negotiated_ssl_protocol(void);
void* nw_tls_get_peer_alpn_data(void);
void* nw_tls_get_peer_hostname(void);
void* nw_tls_get_peer_npn_data(void);
void* nw_tls_get_peer_ocsp_response(void);
void* nw_tls_set_alpn_data(void);
void* nw_tls_set_ciphersuites(void);
void* nw_tls_set_client_auth(void);
void* nw_tls_set_client_auth_type(void);
void* nw_tls_set_config(void);
void* nw_tls_set_dh_parameters(void);
void* nw_tls_set_fallback(void);
void* nw_tls_set_false_start(void);
void* nw_tls_set_identity_from_array(void);
void* nw_tls_set_maximum_protocol_version(void);
void* nw_tls_set_maximum_ssl_protocol(void);
void* nw_tls_set_minimum_protocol_version(void);
void* nw_tls_set_minimum_ssl_protocol(void);
void* nw_tls_set_npn_data(void);
void* nw_tls_set_npn_enabled(void);
void* nw_tls_set_peer_ec_public_key(void);
void* nw_tls_set_peer_hostname(void);
void* nw_tls_set_peer_rsa_public_key(void);
void* nw_tls_set_peer_trust(void);
void* nw_tls_set_psk_identity(void);
void* nw_tls_set_psk_identity_hint(void);
void* nw_tls_set_psk_secret(void);
void* nw_tls_set_session_resumption_enabled(void);
void* nw_tls_set_session_ticket_enabled(void);
void* nw_txt_record_access_bytes(void);
void* nw_txt_record_access_key(void);
void* nw_txt_record_apply(void);
void* nw_txt_record_apply_internal_locked(void);
void* nw_txt_record_conforms_to_rfc_1464(void);
void* nw_txt_record_copy(void);
void* nw_txt_record_create_dictionary(void);
void* nw_txt_record_create_dictionary_with_initial_length(void);
void* nw_txt_record_create_with_bytes(void);
void* nw_txt_record_find_key(void);
void* nw_txt_record_find_start_of_key_locked(void);
void* nw_txt_record_get_bytes(void);
void* nw_txt_record_get_key(void);
void* nw_txt_record_get_key_count(void);
void* nw_txt_record_get_key_value_result(void);
void* nw_txt_record_get_length(void);
void* nw_txt_record_is_dictionary(void);
void* nw_txt_record_is_equal(void);
void* nw_txt_record_key_is_valid(void);
void* nw_txt_record_remove_key(void);
void* nw_txt_record_remove_key_locked(void);
void* nw_txt_record_set_key(void);
void* nw_udp_create_metadata(void);
void* nw_udp_create_options(void);
void* nw_udp_options_get_no_metadata(void);
void* nw_udp_options_set_no_metadata(void);
void* nw_udp_options_set_prefer_no_checksum(void);
void* nw_unordered_xpc_array_is_equal(void);
void* nw_utf8_validator_init(void);
void* nw_utf8_validator_is_parsing(void);
void* nw_utf8_validator_parse(void);
void* nw_utilities_cidr_string_to_subnet_and_mask(void);
void* nw_utilities_copy_local_entitlement_value(void);
void* nw_utilities_copy_sanitized_url(void);
void* nw_utilities_create_c_string_from_cfstring(void);
void* nw_ws_copy_response_for_challenge(void);
void* nw_ws_create_client_request(void);
void* nw_ws_create_metadata(void);
void* nw_ws_create_options(void);
void* nw_ws_metadata_copy_server_response(void);
void* nw_ws_metadata_get_close_code(void);
void* nw_ws_metadata_get_opcode(void);
void* nw_ws_metadata_set_close_code(void);
void* nw_ws_metadata_set_pong_handler(void);
void* nw_ws_options_add_additional_header(void);
void* nw_ws_options_add_protocol(void);
void* nw_ws_options_add_subprotocol(void);
void* nw_ws_options_set_auto_reply_ping(void);
void* nw_ws_options_set_client_request_handler(void);
void* nw_ws_options_set_maximum_message_size(void);
void* nw_ws_options_set_prepend_data(void);
void* nw_ws_options_set_skip_handshake(void);
void* nw_ws_present_request_to_user(void);
void* nw_ws_request_enumerate_additional_headers(void);
void* nw_ws_request_enumerate_subprotocols(void);
void* nw_ws_response_add_additional_header(void);
void* nw_ws_response_create(void);
void* nw_ws_response_enumerate_additional_headers(void);
void* nw_ws_response_get_selected_subprotocol(void);
void* nw_ws_response_get_status(void);
void* nw_ws_validate_client_request(void);
void* nw_ws_validate_server_response(void);
void* nwlog_get_private_redacted(void);
void* nwlog_get_string_for_dns_service_error(void);
void* nwlog_send_copy_to_fd(void);
void* sa_dst_compare(void);
void* sa_dst_compare_no_dependencies(void);
void* sa_dst_compare_no_stats(void);
void* tcp_connection_accept(void);
void* tcp_connection_add_event_adaptive_read_timeout(void);
void* tcp_connection_add_event_adaptive_write_timeout(void);
void* tcp_connection_add_event_excessive_keepalives(void);
void* tcp_connection_allow_client_socket_access(void);
void* tcp_connection_are_proxies_supported(void);
void* tcp_connection_cancel(void);
void* tcp_connection_conditions_get_unmet_reason(void);
void* tcp_connection_conditions_met(void);
void* tcp_connection_copy_connected_path(void);
void* tcp_connection_copy_context(void);
void* tcp_connection_copy_description(void);
void* tcp_connection_copy_endpoint(void);
void* tcp_connection_copy_metadata(void);
void* tcp_connection_copy_nw_connection(void);
void* tcp_connection_copy_parameters(void);
void* tcp_connection_copy_proxy(void);
void* tcp_connection_copy_socket(void);
void* tcp_connection_copy_tcp_info(void);
void* tcp_connection_create(void);
void* tcp_connection_create_inbound(void);
void* tcp_connection_create_upgrade(void);
void* tcp_connection_create_with_connected_fd(void);
void* tcp_connection_create_with_connection(void);
void* tcp_connection_create_with_endpoint_and_parameters(void);
void* tcp_connection_create_with_nw_connection(void);
void* tcp_connection_create_with_service(void);
void* tcp_connection_create_with_sockaddr(void);
void* tcp_connection_did_fallback(void);
void* tcp_connection_event_to_string(void);
void* tcp_connection_fallback_is_fast(void);
void* tcp_connection_fallback_watcher_create(void);
void* tcp_connection_fallback_watcher_destroy(void);
void* tcp_connection_fillout_tcp_connection_info(void);
void* tcp_connection_get_connection_quality(void);
void* tcp_connection_get_counts(void);
void* tcp_connection_get_error(void);
void* tcp_connection_get_hostname(void);
void* tcp_connection_get_interface(void);
void* tcp_connection_get_local(void);
void* tcp_connection_get_remote(void);
void* tcp_connection_get_socket(void);
void* tcp_connection_get_statistics(void);
void* tcp_connection_get_tfo_success(void);
void* tcp_connection_get_txtrecord(void);
void* tcp_connection_get_unsent_length(void);
void* tcp_connection_has_better_route(void);
void* tcp_connection_id(void);
void* tcp_connection_is_cellular(void);
void* tcp_connection_is_expensive(void);
void* tcp_connection_is_multipath(void);
void* tcp_connection_is_sleep_proxied(void);
void* tcp_connection_is_viable(void);
void* tcp_connection_log_event(void);
void* tcp_connection_multipath_copy_subflow_switch_counts(void);
void* tcp_connection_multipath_get_primary_subflow_ifindex(void);
void* tcp_connection_multipath_get_subflow_count(void);
void* tcp_connection_override_obscure(void);
void* tcp_connection_read(void);
void* tcp_connection_read_buffer(void);
void* tcp_connection_release(void);
void* tcp_connection_retain(void);
void* tcp_connection_retry(void);
void* tcp_connection_set_account_identifier(void);
void* tcp_connection_set_background_traffic_management(void);
void* tcp_connection_set_cancel_handler(void);
void* tcp_connection_set_cellular_service(void);
void* tcp_connection_set_connection_attempt_timeout(void);
void* tcp_connection_set_connection_pool(void);
void* tcp_connection_set_context(void);
void* tcp_connection_set_duet_conditional(void);
void* tcp_connection_set_ecn_enabled(void);
void* tcp_connection_set_event_handler(void);
void* tcp_connection_set_event_handler_f(void);
void* tcp_connection_set_extended_background_idle(void);
void* tcp_connection_set_fallback_fast(void);
void* tcp_connection_set_force_address_family(void);
void* tcp_connection_set_indefinite(void);
void* tcp_connection_set_initial_data_payload(void);
void* tcp_connection_set_interface_by_index(void);
void* tcp_connection_set_interface_by_name(void);
void* tcp_connection_set_keepalive(void);
void* tcp_connection_set_keepalive_offload(void);
void* tcp_connection_set_low_latency(void);
void* tcp_connection_set_metadata(void);
void* tcp_connection_set_minimum_throughput(void);
void* tcp_connection_set_multipath(void);
void* tcp_connection_set_multipath_service(void);
void* tcp_connection_set_no_cellular(void);
void* tcp_connection_set_no_delay(void);
void* tcp_connection_set_no_expensive(void);
void* tcp_connection_set_no_fallback(void);
void* tcp_connection_set_opportunistic(void);
void* tcp_connection_set_persistent(void);
void* tcp_connection_set_power_nap(void);
void* tcp_connection_set_preparesocket(void);
void* tcp_connection_set_prohibited_interface_subtypes(void);
void* tcp_connection_set_prohibited_interface_types(void);
void* tcp_connection_set_proxies(void);
void* tcp_connection_set_queue(void);
void* tcp_connection_set_read_buffer_size(void);
void* tcp_connection_set_receive_any_interface(void);
void* tcp_connection_set_requires_power(void);
void* tcp_connection_set_sleep_idle_interval(void);
void* tcp_connection_set_source_application(void);
void* tcp_connection_set_source_application_by_bundle(void);
void* tcp_connection_set_tfo(void);
void* tcp_connection_set_timeframe(void);
void* tcp_connection_set_tls(void);
void* tcp_connection_set_tls_handshake_message_handler(void);
void* tcp_connection_set_tls_mode(void);
void* tcp_connection_set_tls_prepare(void);
void* tcp_connection_set_traffic_class(void);
void* tcp_connection_set_url(void);
void* tcp_connection_set_usage_model(void);
void* tcp_connection_set_workload(void);
void* tcp_connection_start(void);
void* tcp_connection_write(void);
void* tcp_connection_write_buffer(void);
void* tcp_connection_write_eof(void);
void* tcp_fallback_watcher_fallback_inuse(void);
void* tcp_listener_cancel(void);
void* tcp_listener_create(void);
void* tcp_listener_create_launchd(void);
void* tcp_listener_enable_coprocessor_interface(void);
void* tcp_listener_get_dns_service_ref(void);
void* tcp_listener_get_port(void);
void* tcp_listener_release(void);
void* tcp_listener_retain(void);
void* tcp_listener_set_accept_handler(void);
void* tcp_listener_set_accept_handler_f(void);
void* tcp_listener_set_error_handler(void);
void* tcp_listener_set_error_handler_f(void);
void* tcp_listener_set_interface(void);
void* tcp_listener_set_local_only(void);
void* tcp_listener_set_port(void);
void* tcp_listener_set_register_p2p(void);
void* tcp_listener_set_service(void);
void* tcp_listener_set_tfo(void);
void* tcp_listener_start(void);
void* udp_validate_cksum(void);
void* validate_tcp_cksum(void);

#endif
